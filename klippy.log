===== Config file =====
[idle_timeout]
timeout = 600

[force_move]
enable_force_move = true

[virtual_sdcard]
path = /home/nineball/printer_data/gcodes

[exclude_object]

[pause_resume]

[display_status]

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0

[gcode_macro _globals]
variable_filament_sensor_enabled = 1
variable_beeping_enabled = 0
variable_bed_temp_over = 10
variable_kamp_enable = 0
variable_pre_purge_prime_length = 1.40
gcode = 

[gcode_macro CONDITIONAL_BEEP]
gcode = 
	
	{% set i = params.I|default(1)|int %}
	{% set dur = params.DUR|default(100)|int %}
	{% set freq = params.FREQ|default(2000)|int %}
	
	{% set BEEPING_ENABLED=printer["gcode_macro _globals"].beeping_enabled|default(-1)|int %}
	
	{% if BEEPING_ENABLED == 1 %}
	BEEP I={i} DUR={dur} FREQ={freq}
	{% endif %}

[gcode_macro ADJUST_FILAMENT_SENSOR_STATUS]
gcode = 
	
	{% set NEWSTATUS = params.ENABLE|default(-1)|int %}
	
	{% set FILAMENT_SENSOR_ENABLED=printer["gcode_macro _globals"].filament_sensor_enabled|default(-1)|int %}
	
	{% if FILAMENT_SENSOR_ENABLED == 1 and NEWSTATUS != -1 %}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE={NEWSTATUS}
	{% endif %}

[gcode_macro M109]
rename_existing = M99109
gcode = 
	
	{% set s = params.S|float %}
	
	M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}
	{% if s != 0 %}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}
	{% endif %}

[gcode_macro M190]
rename_existing = M99190
gcode = 
	
	{% set s = params.S|float %}
	
	M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}
	{% if s != 0 %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}
	{% endif %}

[gcode_macro PURGE_LINE]
gcode = 
	{% set PRE_PURGE_PRIME_LENGTH=printer["gcode_macro _globals"].pre_purge_prime_length|default(1.40)|float %}
	ADJUST_FILAMENT_SENSOR_STATUS ENABLE=1
	
	
	{% set extrudeAmount = 26.6 %}
	{% set movementLength = 100.0 %}
	{% set movementSpeed = 15 * 60 %}
	{% set xStart = 0.5 %}
	{% set yStart = 0.5 %}
	
	
	{% set maxVelocity = printer.configfile.settings.printer.max_velocity|default(200)|int %}
	{% set maxVelocityAdjusted =  (0.95 * maxVelocity * 60)|int  %}
	
	G92 E0.0
	G90
	G0 X{xStart} Y{yStart} F{maxVelocityAdjusted}
	G1 Z0.4 F500.0
	M83
	G1 E{PRE_PURGE_PRIME_LENGTH} F500
	G1 X{xStart + movementLength} E{extrudeAmount} F{movementSpeed}
	
	G92 E0.0
	M82
	G1 Z5.0

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	PRINT_END
	BASE_CANCEL_PRINT

[gcode_macro PRINT_START]
gcode = 
	ADJUST_FILAMENT_SENSOR_STATUS ENABLE=1
	
	{% set bedtemp = params.BED|int %}
	{% set hotendtemp = params.HOTEND|int %}
	{% set chambertemp = params.CHAMBER|default(0)|int %}
	
	
	{% set bedtempSlicer = bedtemp %}
	{% set bedtempOver = printer["gcode_macro _globals"].bed_temp_over|default(0)|int %}
	{% set maxVelocity = printer.configfile.settings.printer.max_velocity|default(200)|int %}
	{% set maxVelocityAdjusted =  (0.90 * maxVelocity * 60)|int %}
	{% set kampEnabled=printer["gcode_macro _globals"].kamp_enable|default(0)|int %}
	
	{% if printer.configfile.settings.safe_z_home %}
	{% set startX = printer.configfile.settings.safe_z_home.home_xy_position[0]|float %}
	{% set startY = printer.configfile.settings.safe_z_home.home_xy_position[1]|float %}
	{% endif %}
	
	{% set bedtempAlmost = ((bedtemp - 2, 0, printer.heater_bed.temperature|int)|max, bedtemp)|max %}
	{% set hotendtempStepOne = ((hotendtemp, printer[printer.toolhead.extruder].temperature|int)|min, 150)|max %}
	{% set hotendtempStepTwo = ((hotendtemp, printer[printer.toolhead.extruder].temperature|int)|min, 170)|max %}
	
	
	{% if bedtempAlmost > bedtemp %}
	{% if (bedtempAlmost - bedtempOver) <= bedtemp %}
	{% set bedtemp = bedtempAlmost %}
	{% endif %}
	{% endif %}
	
	G90
	M140 S{bedtempAlmost}
	M104 S{hotendtempStepOne}
	G28 X Y
	{% if printer.configfile.settings.safe_z_home %}
	G1 X{startX} Y{startY} F{maxVelocityAdjusted}
	{% endif %}
	
	M190 S{bedtempAlmost}
	{% if kampEnabled == 0 %}
	M104 S{hotendtempStepTwo}
	{% endif %}
	M190 S{bedtemp}
	M140 S{bedtempSlicer}
	
	{% if kampEnabled == 0 %}
	BED_MESH_PROFILE LOAD=default
	M104 S{hotendtemp}
	G28 Z
	{% else %}
	G28 Z
	BED_MESH_CALIBRATE
	M104 S{hotendtemp}
	{% endif %}
	
	G1 X0 Y0 F{maxVelocityAdjusted}
	M109 S{hotendtemp}
	
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	ADJUST_FILAMENT_SENSOR_STATUS ENABLE=0
	CONDITIONAL_BEEP I=2 DUR=30 FREQ=8500
	{% set PRE_PURGE_PRIME_LENGTH=printer["gcode_macro _globals"].pre_purge_prime_length|default(1.40)|float %}
	
	M400
	G92 E0
	G1 E-{PRE_PURGE_PRIME_LENGTH} F400
	G91
	
	
	{% set zVelocity = printer.configfile.settings.printer.max_z_velocity|default(15)|int %}
	{% set maxVelocity = printer.configfile.settings.printer.max_velocity|default(200)|int %}
	{% set zVelocityAdjusted =  (0.95 * zVelocity * 60)|int  %}
	{% set maxVelocityAdjusted =  (0.95 * maxVelocity * 60)|int  %}
	
	
	{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
	{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
	{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
	
	
	{% if printer.toolhead.position.x < (max_x - 20) %}
	{% set x_safe = 20.0 %}
	{% else %}
	{% set x_safe = -20.0 %}
	{% endif %}
	
	{% if printer.toolhead.position.y < (max_y - 20) %}
	{% set y_safe = 20.0 %}
	{% else %}
	{% set y_safe = -20.0 %}
	{% endif %}
	
	{% set lift_height = 25.0 %}
	{% if printer.toolhead.position.z < (max_z - lift_height) %}
	{% set z_safe = lift_height %}
	{% else %}
	{% set z_safe = max_z - printer.toolhead.position.z %}
	{% endif %}
	
	G0 Z{z_safe} F{zVelocityAdjusted}
	G0 X{x_safe} Y{y_safe} F{maxVelocityAdjusted}
	TURN_OFF_HEATERS
	M107
	G90
	G0 X60 Y{max_y} F3600

[gcode_macro LOAD_FILAMENT]
gcode = 
	M83
	G1 E30 F300
	G1 E15 F150
	M82

[gcode_macro UNLOAD_FILAMENT]
gcode = 
	M83
	G1 E10 F300
	G1 E-40 F1800
	M82

[gcode_macro M600]
gcode = 
	CONDITIONAL_BEEP i=1 dur=300
	CONDITIONAL_BEEP i=1 dur=100
	CONDITIONAL_BEEP i=1 dur=100
	PAUSE

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
gcode = 
	
	{% set z = params.Z|default(10)|int %}
	
	{% if printer['pause_resume'].is_paused|int == 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}
	
	ADJUST_FILAMENT_SENSOR_STATUS ENABLE=0
	
	SAVE_GCODE_STATE NAME=PAUSE
	BASE_PAUSE
	{% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}
	G91
	G1 Z{z} F900
	{% else %}
	{ action_respond_info("Pause zhop exceeds maximum Z height.") }
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
	{% endif %}
	G90
	G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000
	SAVE_GCODE_STATE NAME=PAUSEPARK
	M104 S0
	SET_IDLE_TIMEOUT TIMEOUT=43200
	{% endif %}

[gcode_macro RESUME]
rename_existing = BASE_RESUME
variable_zhop = 0
variable_etemp = 0
gcode = 
	
	{% set e = params.E|default(2.5)|int %}
	
	{% if printer['pause_resume'].is_paused|int == 1 %}
	ADJUST_FILAMENT_SENSOR_STATUS ENABLE=1
	
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	{% if etemp > 0 %}
	M109 S{etemp|int}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100
	G91
	M83
	{% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
	G1 Z{zhop * -1} E{e} F900
	{% else %}
	G1 Z{zhop * -1} F900
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60
	BASE_RESUME
	{% endif %}

[gcode_macro _CG28]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% endif %}

[gcode_macro BEEP]
description = BEEP I=3 DUR=200 FREQ=2000: Beep 3 times, for 200ms each, at 2kHz frequency.
gcode = 
	
	{% set i = params.I|default(1)|int %}
	{% set dur = [params.DUR|default(100)|int,255] | min %}
	
	{% for iteration in range(i|int) %}
	M300 P{dur}
	G4 P{dur}
	{% endfor %}

[gcode_macro PARKFRONT]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% endif %}
	SAVE_GCODE_STATE NAME=PARKFRONT
	G90
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z/2} F6000
	RESTORE_GCODE_STATE NAME=PARKFRONT

[gcode_macro PARKFRONTLOW]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% endif %}
	SAVE_GCODE_STATE NAME=PARKFRONT
	G90
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z20 F6000
	RESTORE_GCODE_STATE NAME=PARKFRONT

[gcode_macro PARKREAR]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% endif %}
	SAVE_GCODE_STATE NAME=PARKREAR
	G90
	G0 X{printer.toolhead.axis_minimum.x+10} Y{printer.toolhead.axis_maximum.y-10} Z{printer.toolhead.axis_maximum.z-50} F6000
	RESTORE_GCODE_STATE NAME=PARKREAR

[gcode_macro PARKCENTER]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% endif %}
	SAVE_GCODE_STATE NAME=PARKCENTER
	G90
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F6000
	RESTORE_GCODE_STATE NAME=PARKCENTER

[gcode_macro PARKBED]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% endif %}
	SAVE_GCODE_STATE NAME=PARKBED
	G90
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z15 F6000
	RESTORE_GCODE_STATE NAME=PARKBED

[gcode_macro MECHANICAL_GANTRY_CALIBRATION]
gcode = 
	
	{% set my_current = params.CURRENT|default(0.20)|float %}
	
	{% set oldcurrent = printer.configfile.settings["tmc2209 stepper_z"].run_current %}
	{% set oldhold = printer.configfile.settings["tmc2209 stepper_z"].hold_current %}
	{% set x_max = printer.toolhead.axis_maximum.x %}
	{% set y_max = printer.toolhead.axis_maximum.y %}
	{% set z_max = printer.toolhead.axis_maximum.z %}
	{% set fast_move_z = printer.configfile.settings["printer"].max_z_velocity %}
	{% set fast_move = printer.configfile.settings["printer"].max_velocity %}
	M117 {printer.homed_axes}
	{% if printer.homed_axes != 'xyz' %}
	G28
	{% endif %}
	G90
	G0 X{x_max / 2} Y{y_max / 2} F{fast_move * 30 }
	
	G0 Z{z_max -5} F{fast_move_z * 60 }
	
	SET_TMC_CURRENT STEPPER=stepper_z CURRENT={my_current}
	
	{% if printer.configfile.settings["stepper_z1"] %}
	SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={my_current}
	{% endif %}
	
	CONDITIONAL_BEEP I=1
	G4 P200
	
	SET_KINEMATIC_POSITION Z={z_max - 25}
	
	G1 Z{z_max} F{6 * 60}
	CONDITIONAL_BEEP I=2
	G4 P10000
	G1 Z{z_max -6} F{6 * 60}
	CONDITIONAL_BEEP I=3
	G4 P200
	
	SET_TMC_CURRENT STEPPER=stepper_z CURRENT={oldcurrent} HOLDCURRENT={oldhold}
	
	{% if printer.configfile.settings["stepper_z1"] %}
	SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={oldcurrent} HOLDCURRENT={oldhold}
	{% endif %}
	
	G1 Z{z_max -30} F{6 * 60}
	
	G4 P200
	G28 Z

[gcode_macro G34]
gcode = 
	MECHANICAL_GANTRY_CALIBRATION

[gcode_macro PID_TEST_BED]
gcode = 
	
	{% set TARGETTEMP = params.TEMP|default(70)|int %}
	
	{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
	{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
	G28
	G90
	G1 X{max_x/2} Y{max_y/2} Z40 F6000
	PID_CALIBRATE HEATER=heater_bed TARGET={TARGETTEMP}

[gcode_macro PID_TEST_HOTEND]
gcode = 
	
	{% set TARGETTEMP = params.TEMP|default(245)|int %}
	
	{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
	{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
	G28
	G90
	G1 X{max_x/2} Y{max_y/2} Z10 F6000
	M106 S64
	PID_CALIBRATE HEATER=extruder TARGET={TARGETTEMP}
	M107

[gcode_macro PID_TEST_ALL]
gcode = 
	PID_TEST_BED
	PID_TEST_HOTEND
	SAVE_CONFIG

[gcode_macro DO_PROBE_CALIBRATE]
gcode = 
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=180
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM=60
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM=180
	G28
	PROBE_CALIBRATE

[gcode_macro DO_CREATE_MESH]
gcode = 
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=180
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM=60
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM=180
	G28
	_BED_MESH_CALIBRATE

[gcode_macro BED_MESH_CALIBRATE]
rename_existing = _BED_MESH_CALIBRATE
gcode = 
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}
	{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}
	{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}
	{% set kamp_settings = printer["gcode_macro _KAMP_Settings"] %}
	{% set verbose_enable = kamp_settings.verbose_enable | abs %}
	{% set probe_dock_enable = kamp_settings.probe_dock_enable | abs %}
	{% set attach_macro = kamp_settings.attach_macro | string %}
	{% set detach_macro = kamp_settings.detach_macro | string %}
	{% set mesh_margin = kamp_settings.mesh_margin | float %}
	{% set fuzz_amount = kamp_settings.fuzz_amount | float %}
	{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}
	{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}
	{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}
	{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}
	{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}
	{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}
	{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}
	
	{% set fuzz_range = range((0) | int, (fuzz_amount * 100) | int + 1) %}
	{% set adapted_x_min = x_min - mesh_margin - (fuzz_range | random / 100.0) %}
	{% set adapted_y_min = y_min - mesh_margin - (fuzz_range | random / 100.0) %}
	{% set adapted_x_max = x_max + mesh_margin + (fuzz_range | random / 100.0) %}
	{% set adapted_y_max = y_max + mesh_margin + (fuzz_range | random / 100.0) %}
	
	{% set adapted_x_min = [adapted_x_min , bed_mesh_min[0]] | max %}
	{% set adapted_y_min = [adapted_y_min , bed_mesh_min[1]] | max %}
	{% set adapted_x_max = [adapted_x_max , bed_mesh_max[0]] | min %}
	{% set adapted_y_max = [adapted_y_max , bed_mesh_max[1]] | min %}
	
	{% set points_x = (((adapted_x_max - adapted_x_min) / max_probe_point_distance_x) | round(method='ceil') | int) + 1 %}
	{% set points_y = (((adapted_y_max - adapted_y_min) / max_probe_point_distance_y) | round(method='ceil') | int) + 1 %}
	
	{% if (([points_x, points_y]|max) > 6) %}
	{% set algorithm = "bicubic" %}
	{% set min_points = 4 %}
	{% else %}
	{% set algorithm = "lagrange" %}
	{% set min_points = 3 %}
	{% endif %}
	
	{% set points_x = [points_x , min_points]|max %}
	{% set points_y = [points_y , min_points]|max %}
	{% set points_x = [points_x , probe_count[0]]|min %}
	{% set points_y = [points_y , probe_count[1]]|min %}
	
	{% if verbose_enable == True %}
	{% if printer.exclude_object.objects != [] %}
	
	{ action_respond_info( "Algorithm: {}.".format(
	(algorithm),
	)) }
	
	{ action_respond_info("Default probe count: {},{}.".format(
	(probe_count[0]),
	(probe_count[1]),
	)) }
	
	{ action_respond_info("Adapted probe count: {},{}.".format(
	(points_x),
	(points_y),
	)) }
	
	{action_respond_info("Default mesh bounds: {}, {}.".format(
	(bed_mesh_min[0],bed_mesh_min[1]),
	(bed_mesh_max[0],bed_mesh_max[1]),
	)) }
	
	{% if mesh_margin > 0 %}
	{action_respond_info("Mesh margin is {}, mesh bounds extended by {}mm.".format(
	(mesh_margin),
	(mesh_margin),
	)) }
	{% else %}
	{action_respond_info("Mesh margin is 0, margin not increased.")}
	{% endif %}
	
	{% if fuzz_amount > 0 %}
	{action_respond_info("Mesh point fuzzing enabled, points fuzzed up to {}mm.".format(
	(fuzz_amount),
	)) }
	{% else %}
	{action_respond_info("Fuzz amount is 0, mesh points not fuzzed.")}
	{% endif %}
	
	{ action_respond_info("Adapted mesh bounds: {}, {}.".format(
	(adapted_x_min, adapted_y_min),
	(adapted_x_max, adapted_y_max),
	)) }
	
	{action_respond_info("KAMP adjustments successful. Happy KAMPing!")}
	
	{% else %}
	
	{action_respond_info("No objects detected! Check your gcode and make sure that EXCLUDE_OBJECT_DEFINE is happening before BED_MESH_CALIBRATE is called. Defaulting to regular meshing.")}
	G4 P5000
	{% endif %}
	
	{% endif %}
	
	{% if probe_dock_enable == True %}
	{attach_macro}
	{% endif %}
	
	_BED_MESH_CALIBRATE mesh_min={adapted_x_min},{adapted_y_min} mesh_max={adapted_x_max},{adapted_y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y}
	
	{% if probe_dock_enable == True %}
	{detach_macro}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	
	{% set verbose_enable = printer["gcode_macro _KAMP_Settings"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro _KAMP_Settings"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro _KAMP_Settings"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro _KAMP_Settings"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro _KAMP_Settings"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro _KAMP_Settings"].flow_rate | float %}
	
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	
	{% if cross_section < 5 %}
	
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	
	{% else %}
	
	{% if verbose_enable == True %}
	
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	
	{% if purge_y_origin > 0 %}
	
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	
	{% else %}
	
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	
	{% else %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	
	{% endif %}
	
	RESTORE_GCODE_STATE NAME=Prepurge_State
	
	{% endif %}

[gcode_macro SMART_PARK]
description = Parks your printhead near the print area for pre-print hotend heating.
gcode = 
	
	{% set kamp_settings = printer["gcode_macro _KAMP_Settings"] %}
	{% set z_height = kamp_settings.smart_park_height | float %}
	{% set purge_margin = kamp_settings.purge_margin | float %}
	{% set verbose_enable = kamp_settings.verbose_enable | abs %}
	{% set center_x = printer.toolhead.axis_maximum.x / 2 | float %}
	{% set center_y = printer.toolhead.axis_maximum.y / 2 | float %}
	{% set axis_minimum_x = printer.toolhead.axis_minimum.x | float %}
	{% set axis_minimum_y = printer.toolhead.axis_minimum.y | float %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_min = all_points | map(attribute=0) | min | default(center_x) %}
	{% set y_min = all_points | map(attribute=1) | min | default(center_y) %}
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	
	{% if purge_margin > 0 and x_min != center_x and y_min != center_y %}
	{% set x_min = [ x_min - purge_margin , x_min ] | min %}
	{% set y_min = [ y_min - purge_margin , y_min ] | min %}
	{% set x_min = [ x_min , axis_minimum_x ] | max %}
	{% set y_min = [ y_min , axis_minimum_y ] | max %}
	{% endif %}
	
	{% if verbose_enable == True %}
	
	{ action_respond_info("Smart Park location: {},{}.".format(
	(x_min),
	(y_min),
	)) }
	
	{% endif %}
	
	{% if printer.toolhead.position.z < z_height %}
	G0 Z{z_height}
	{% endif %}
	G0 X{x_min} Y{y_min} F{travel_speed}
	G0 Z{z_height}

[gcode_macro _KAMP_Settings]
description = This macro contains all adjustable settings for KAMP
variable_verbose_enable = True
variable_mesh_margin = 0
variable_fuzz_amount = 0
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
variable_purge_height = 0.8
variable_tip_distance = 0
variable_purge_margin = 10
variable_purge_amount = 30
variable_flow_rate = 12
variable_smart_park_height = 10
gcode = 
	
	{action_respond_info(" Running the KAMP_Settings macro does nothing, it is only used for storing KAMP settings. ")}

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	M400
	G28
	
	{% if printer.configfile.settings.quad_gantry_level %}
	{% if printer.quad_gantry_level.applied == False %}
	QUAD_GANTRY_LEVEL
	G28 Z
	{% endif %}
	{% endif %}
	
	G90
	G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
	M400
	G28 X Y
	G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
	G4 P1000
	GET_POSITION
	
	
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	{% for i in range(iterations) %}
	
	G0 X{x_min} Y{y_min} F{speed*60}
	G0 X{x_max} Y{y_max} F{speed*60}
	G0 X{x_min} Y{y_min} F{speed*60}
	G0 X{x_max} Y{y_min} F{speed*60}
	G0 X{x_min} Y{y_max} F{speed*60}
	G0 X{x_max} Y{y_min} F{speed*60}
	
	
	G0 X{x_min} Y{y_min} F{speed*60}
	G0 X{x_min} Y{y_max} F{speed*60}
	G0 X{x_max} Y{y_max} F{speed*60}
	G0 X{x_max} Y{y_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
	
	
	M400
	G28
	
	G90
	G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
	G4 P1000
	GET_POSITION
	
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED

[gcode_macro GET_TIMELAPSE_SETUP]
description = Print the Timelapse setup
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set output_txt = ["Timelapse Setup:"] %}
	{% set _dummy = output_txt.append("enable: %s" % tl.enable) %}
	{% set _dummy = output_txt.append("park: %s" % tl.park.enable) %}
	{% if tl.park.enable %}
	{% set _dummy = output_txt.append("park position: %s time: %s s" % (tl.park.pos, tl.park.time)) %}
	{% set _dummy = output_txt.append("park cord x:%s y:%s dz:%s" % (tl.park.coord.x, tl.park.coord.y, tl.park.coord.dz)) %}
	{% set _dummy = output_txt.append("travel speed: %s mm/s" % tl.speed.travel) %}
	{% endif %}
	{% set _dummy = output_txt.append("fw_retract: %s" % tl.extruder.fw_retract) %}
	{% if not tl.extruder.fw_retract %}
	{% set _dummy = output_txt.append("retract: %s mm speed: %s mm/s" % (tl.extruder.retract, tl.speed.retract)) %}
	{% set _dummy = output_txt.append("extrude: %s mm speed: %s mm/s" % (tl.extruder.extrude, tl.speed.extrude)) %}
	{% endif %}
	{% set _dummy = output_txt.append("verbose: %s" % tl.verbose) %}
	{action_respond_info(output_txt|join("\n"))}

[gcode_macro _SET_TIMELAPSE_SETUP]
description = Set user parameters for timelapse
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	{% set park = {'min'   : {'x': (min.x / 1.42)|round(3) if round_bed else min.x|round(3),
	'y': (min.y / 1.42)|round(3) if round_bed else min.y|round(3)},
	'max'   : {'x': (max.x / 1.42)|round(3) if round_bed else max.x|round(3),
	'y': (max.y / 1.42)|round(3) if round_bed else max.y|round(3)},
	'center': {'x': (max.x-(max.x-min.x)/2)|round(3),
	'y': (max.y-(max.y-min.y)/2)|round(3)}} %}
	
	{% if params.ENABLE %}
	{% if params.ENABLE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=enable VALUE={True if params.ENABLE|lower == 'true' else False}
	{% else %}
	{action_raise_error("ENABLE=%s not supported. Allowed values are [True, False]" % params.ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.VERBOSE %}
	{% if params.VERBOSE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=verbose VALUE={True if params.VERBOSE|lower == 'true' else False}
	{% else %}
	{action_raise_error("VERBOSE=%s not supported. Allowed values are [True, False]" % params.VERBOSE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_X %}
	{% if params.CUSTOM_POS_X|float >= min.x and params.CUSTOM_POS_X|float <= max.x %}
	{% set _dummy = tl.park.custom.update({'x':params.CUSTOM_POS_X|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_X=%s must be within [%s - %s]" % (params.CUSTOM_POS_X, min.x, max.x))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_Y %}
	{% if params.CUSTOM_POS_Y|float >= min.y and params.CUSTOM_POS_Y|float <= max.y %}
	{% set _dummy = tl.park.custom.update({'y':params.CUSTOM_POS_Y|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_Y=%s must be within [%s - %s]" % (params.CUSTOM_POS_Y, min.y, max.y))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_DZ %}
	{% if params.CUSTOM_POS_DZ|float >= min.z and params.CUSTOM_POS_DZ|float <= max.z %}
	{% set _dummy = tl.park.custom.update({'dz':params.CUSTOM_POS_DZ|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_DZ=%s must be within [%s - %s]" % (params.CUSTOM_POS_DZ, min.z, max.z))}
	{% endif %}
	{% endif %}
	{% if params.PARK_ENABLE %}
	{% if params.PARK_ENABLE|lower is in ['true', 'false'] %}
	{% set _dummy = tl.park.update({'enable':True if params.PARK_ENABLE|lower == 'true' else False}) %}
	{% else %}
	{action_raise_error("PARK_ENABLE=%s not supported. Allowed values are [True, False]" % params.PARK_ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.PARK_POS %}
	{% if params.PARK_POS|lower is in ['center','front_left','front_right','back_left','back_right','custom','x_only','y_only'] %}
	{% set dic = {'center'      : {'x': park.center.x   , 'y': park.center.y   , 'dz': 1                },
	'front_left'  : {'x': park.min.x      , 'y': park.min.y      , 'dz': 0                },
	'front_right' : {'x': park.max.x      , 'y': park.min.y      , 'dz': 0                },
	'back_left'   : {'x': park.min.x      , 'y': park.max.y      , 'dz': 0                },
	'back_right'  : {'x': park.max.x      , 'y': park.max.y      , 'dz': 0                },
	'custom'      : {'x': tl.park.custom.x, 'y': tl.park.custom.y, 'dz': tl.park.custom.dz},
	'x_only'      : {'x': tl.park.custom.x, 'y': 'none'          , 'dz': tl.park.custom.dz},
	'y_only'      : {'x': 'none'          , 'y': tl.park.custom.y, 'dz': tl.park.custom.dz}} %}
	{% set _dummy = tl.park.update({'pos':params.PARK_POS|lower}) %}
	{% set _dummy = tl.park.update({'coord':dic[tl.park.pos]}) %}
	{% else %}
	{action_raise_error("PARK_POS=%s not supported. Allowed values are [CENTER, FRONT_LEFT, FRONT_RIGHT, BACK_LEFT, BACK_RIGHT, CUSTOM, X_ONLY, Y_ONLY]"
	% params.PARK_POS|upper)}
	{% endif %}
	{% endif %}
	{% if params.PARK_TIME %}
	{% if params.PARK_TIME|float >= 0.0 %}
	{% set _dummy = tl.park.update({'time':params.PARK_TIME|float|round(3)}) %}
	{% else %}
	{action_raise_error("PARK_TIME=%s must be a positive number" % params.PARK_TIME)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=park VALUE="{tl.park}"
	{% if params.TRAVEL_SPEED %}
	{% if params.TRAVEL_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'travel':params.TRAVEL_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("TRAVEL_SPEED=%s must be larger than 0" % params.TRAVEL_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_SPEED %}
	{% if params.RETRACT_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'retract':params.RETRACT_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_SPEED=%s must be larger than 0" % params.RETRACT_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.EXTRUDE_SPEED %}
	{% if params.EXTRUDE_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'extrude':params.EXTRUDE_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_SPEED=%s must be larger than 0" % params.EXTRUDE_SPEED)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=speed VALUE="{tl.speed}"
	{% if params.EXTRUDE_DISTANCE %}
	{% if params.EXTRUDE_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'extrude':params.EXTRUDE_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_DISTANCE=%s must be specified as positiv number" % params.EXTRUDE_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_DISTANCE %}
	{% if params.RETRACT_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'retract':params.RETRACT_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_DISTANCE=%s must be specified as positiv number" % params.RETRACT_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.FW_RETRACT %}
	{% if params.FW_RETRACT|lower is in ['true', 'false'] %}
	{% if 'firmware_retraction' in printer.configfile.settings %}
	{% set _dummy = tl.extruder.update({'fw_retract': True if params.FW_RETRACT|lower == 'true' else False}) %}
	{% else %}
	{% set _dummy = tl.extruder.update({'fw_retract':False}) %}
	{% if params.FW_RETRACT|capitalize == 'True' %}
	{action_raise_error("[firmware_retraction] not defined in printer.cfg. Can not enable fw_retract")}
	{% endif %}
	{% endif %}
	{% else %}
	{action_raise_error("FW_RETRACT=%s not supported. Allowed values are [True, False]" % params.FW_RETRACT|capitalize)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=extruder VALUE="{tl.extruder}"
	{% if printer.configfile.settings['gcode_macro pause'] is defined %}
	{% set _dummy = tl.macro.update({'pause': printer.configfile.settings['gcode_macro pause'].rename_existing}) %}
	{% endif %}
	{% if printer.configfile.settings['gcode_macro resume'] is defined %}
	{% set _dummy = tl.macro.update({'resume': printer.configfile.settings['gcode_macro resume'].rename_existing}) %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=macro VALUE="{tl.macro}"

[gcode_macro TIMELAPSE_TAKE_FRAME]
description = Take Timelapse shoot
variable_enable = False
variable_takingframe = False
variable_park = {'enable': False,
	'pos'   : 'center',
	'time'  : 0.1,
	'custom': {'x': 0, 'y': 0, 'dz': 0},
	'coord' : {'x': 0, 'y': 0, 'dz': 0}}
variable_extruder = {'fw_retract': False,
	'retract': 1.0,
	'extrude': 1.0}
variable_speed = {'travel': 100,
	'retract': 15,
	'extrude': 15}
variable_verbose = True
variable_check_time = 0.5
variable_restore = {'absolute': {'coordinates': True, 'extrude': True}, 'speed': 1500, 'e':0, 'factor': {'speed': 1.0, 'extrude': 1.0}}
variable_macro = {'pause': 'PAUSE', 'resume': 'RESUME'}
variable_is_paused = False
gcode = 
	{% set hyperlapse = True if params.HYPERLAPSE and params.HYPERLAPSE|lower =='true' else False %}
	{% if enable %}
	{% if (hyperlapse and printer['gcode_macro HYPERLAPSE'].run) or
	(not hyperlapse and not printer['gcode_macro HYPERLAPSE'].run) %}
	{% if park.enable %}
	{% set pos = {'x': 'X' + park.coord.x|string if park.pos != 'y_only' else '',
	'y': 'Y' + park.coord.y|string if park.pos != 'x_only' else '',
	'z': 'Z'+ [printer.gcode_move.gcode_position.z + park.coord.dz, printer.toolhead.axis_maximum.z]|min|string} %}
	{% set restore = {'absolute': {'coordinates': printer.gcode_move.absolute_coordinates,
	'extrude'    : printer.gcode_move.absolute_extrude},
	'speed'   : printer.gcode_move.speed,
	'e'       : printer.gcode_move.gcode_position.e,
	'factor'  : {'speed'  : printer.gcode_move.speed_factor,
	'extrude': printer.gcode_move.extrude_factor}} %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=restore VALUE="{restore}"
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, minimum extruder temperature not reached!")}{% endif %}
	{% else %}
	{% if extruder.fw_retract %}
	G10
	{% else %}
	M83
	G0 E-{extruder.retract} F{speed.retract * 60}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=True
	{macro.pause}
	SET_GCODE_OFFSET X=0 Y=0
	G90
	{% if "xyz" not in printer.toolhead.homed_axes %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, axis not homed yet!")}{% endif %}
	{% else %}
	G0 {pos.x} {pos.y} {pos.z} F{speed.travel * 60}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=takingframe VALUE=True
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION={check_time}
	M400
	{% endif %}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE={hyperlapse}
	{% endif %}
	{% else %}
	{% if verbose %}{action_respond_info("Timelapse: disabled, take frame ignored")}{% endif %}
	{% endif %}

[gcode_macro _TIMELAPSE_NEW_FRAME]
description = action call for timelapse shoot. must be a seperate macro
gcode = 
	{action_call_remote_method("timelapse_newframe",
	macropark=printer['gcode_macro TIMELAPSE_TAKE_FRAME'].park,
	hyperlapse=params.HYPERLAPSE)}

[delayed_gcode _WAIT_TIMELAPSE_TAKE_FRAME]
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set factor = {'speed': printer.gcode_move.speed_factor, 'extrude': printer.gcode_move.extrude_factor} %}
	{% if tl.takingframe %}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION={tl.check_time}
	{% else %}
	{tl.macro.resume} VELOCITY={tl.speed.travel}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=False
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{action_respond_info("Timelapse: Warning minimum extruder temperature not reached!")}
	{% else %}
	{% if tl.extruder.fw_retract %}
	G11
	{% else %}
	G0 E{tl.extruder.extrude} F{tl.speed.extrude * 60}
	G0 F{tl.restore.speed}
	{% if tl.restore.absolute.extrude %}
	M82
	G92 E{tl.restore.e}
	{% endif %}
	{% endif %}
	{% endif %}
	{% if tl.restore.factor.speed   != factor.speed   %} M220 S{(factor.speed*100)|round(0)}   {% endif %}
	{% if tl.restore.factor.extrude != factor.extrude %} M221 S{(factor.extrude*100)|round(0)} {% endif %}
	{% if not tl.restore.absolute.coordinates %} G91 {% endif %}
	{% endif %}

[gcode_macro HYPERLAPSE]
description = Start/Stop a hyperlapse recording
variable_cycle = 0
variable_run = False
gcode = 
	{% set cycle = params.CYCLE|default(30)|int %}
	{% if params.ACTION and params.ACTION|lower == 'start' %}
	{action_respond_info("Hyperlapse: frames started (Cycle %d sec)" % cycle)}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=True
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=cycle VALUE={cycle}
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True
	{% elif params.ACTION and params.ACTION|lower == 'stop' %}
	{% if run %}{action_respond_info("Hyperlapse: frames stopped")}{% endif %}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=False
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION=0
	{% else %}
	{action_raise_error("Hyperlapse: No valid input parameter
	Use:
	- HYPERLAPSE ACTION=START [CYCLE=time]
	- HYPERLAPSE ACTION=STOP")}
	{% endif %}

[delayed_gcode _HYPERLAPSE_LOOP]
gcode = 
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={printer["gcode_macro HYPERLAPSE"].cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True

[gcode_macro TIMELAPSE_RENDER]
description = Render Timelapse video and wait for the result
variable_render = False
variable_run_identifier = 0
gcode = 
	{action_respond_info("Timelapse: Rendering started")}
	{action_call_remote_method("timelapse_render", byrendermacro="True")}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=render VALUE=True
	{printer.configfile.settings['gcode_macro pause'].rename_existing}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5

[delayed_gcode _WAIT_TIMELAPSE_RENDER]
gcode = 
	{% set ri = printer['gcode_macro TIMELAPSE_RENDER'].run_identifier % 4 %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=run_identifier VALUE={ri + 1}
	{% if printer['gcode_macro TIMELAPSE_RENDER'].render %}
	M117 Rendering {['-','\\','|','/'][ri]}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5
	{% else %}
	{action_respond_info("Timelapse: Rendering finished")}
	M117
	{printer.configfile.settings['gcode_macro resume'].rename_existing}
	{% endif %}

[gcode_macro TEST_STREAM_DELAY]
description = Helper macro to find stream and park delay
gcode = 
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set act = printer.toolhead.position %}
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% if act.z > 5.0 %}
	G0 X{min.x + 5.0} F{tl.speed.travel|int * 60}
	G0 X{(max.x-min.x)/2}
	G4 P{tl.park.time|float * 1000}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE=FALSE
	G0 X{max.x - 5.0}
	{% else %}
	{action_raise_error("Toolhead z %.3f to low. Please place head above z = 5.0" % act.z)}
	{% endif %}

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command

[printer]
kinematics = cartesian
max_velocity = 300
max_accel = 2500
max_z_velocity = 15
max_z_accel = 45
square_corner_velocity = 8.0

[stepper_x]
step_pin = PC2
dir_pin = !PB9
enable_pin = !PC3
microsteps = 128
rotation_distance = 40
endstop_pin = tmc2209_stepper_x:virtual_endstop
position_endstop = 0
position_max = 304
position_min = 0
homing_speed = 40
homing_retract_dist = 0

[tmc2209 stepper_x]
uart_pin = PC1
run_current = 0.820
stealthchop_threshold = 0
interpolate = False
sense_resistor = 0.150
uart_address = 3
driver_sgthrs = 86
diag_pin = PA5

[stepper_y]
step_pin = PB8
dir_pin = PB7
enable_pin = !PC3
microsteps = 128
rotation_distance = 40
endstop_pin = tmc2209_stepper_y:virtual_endstop
position_endstop = 0
position_max = 305
position_min = 0
homing_speed = 40
homing_retract_dist = 0

[tmc2209 stepper_y]
uart_pin = PC0
run_current = 0.880
stealthchop_threshold = 0
interpolate = False
sense_resistor = 0.150
uart_address = 3
driver_sgthrs = 110
diag_pin = PA6

[stepper_z]
step_pin = PB6
dir_pin = !PB5
enable_pin = !PC3
microsteps = 128
rotation_distance = 4
endstop_pin = probe:z_virtual_endstop
position_min = -4
position_max = 350
homing_speed = 4

[tmc2209 stepper_z]
uart_pin = PA15
run_current = 0.800
stealthchop_threshold = 0
interpolate = False
sense_resistor = 0.150
uart_address = 3
diag_pin = PA7

[extruder]
step_pin = PB4
dir_pin = !PB3
enable_pin = !PC3
microsteps = 128
rotation_distance = 4.42
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = PA1
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC5
min_temp = 0
max_temp = 300
max_extrude_only_distance = 150.0
max_extrude_cross_section = 5
control = pid
pid_kp = 23.619
pid_ki = 1.750
pid_kd = 79.715

[tmc2209 extruder]
uart_pin = PC14
run_current = 0.550
stealthchop_threshold = 0
interpolate = False
sense_resistor = 0.150
uart_address = 3

[input_shaper]
shaper_freq_x = 49
shaper_type_x = mzv
shaper_freq_y = 29.2
shaper_type_y = mzv

[firmware_retraction]
retract_length = 0.3
retract_speed = 45
unretract_speed = 30

[heater_bed]
heater_pin = PA2
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC4
min_temp = 0
max_temp = 110
control = pid
pid_kp = 69.191
pid_ki = 0.726
pid_kd = 1647.611

[probe]
pin = PB1
x_offset = 27
y_offset = -20
samples = 3
samples_result = average
samples_tolerance = 0.05
samples_tolerance_retries = 10
z_offset = 1.950

[safe_z_home]
home_xy_position = 123, 170
speed = 100.0
z_hop = 10
z_hop_speed = 15

[bed_mesh]
speed = 175
mesh_min = 27, 10
mesh_max = 303, 280
probe_count = 7, 7
algorithm = bicubic
fade_start = 1
fade_end = 10
fade_target = 0

[axis_twist_compensation]
calibrate_start_x = 27
calibrate_end_x = 272
calibrate_y = 154

[fan]
pin = PA0

[screws_tilt_adjust]
screw1_name = center front left base
screw1 = 84, 136
screw2_name = front left
screw2 = 5, 55
screw3_name = front right
screw3 = 244, 55
screw4_name = center front right
screw4 = 164, 136
screw5_name = center back left
screw5 = 84, 216
screw6_name = center back right
screw6 = 164, 216
screw7_name = back left
screw7 = 5, 295
screw8_name = back right
screw8 = 244, 295
horizontal_move_z = 10
screw_thread = CCW-M4

[filament_switch_sensor filament_sensor]
switch_pin = PA4
pause_on_runout = True
insert_gcode = 
	{ action_respond_info("Insert Detected") }
runout_gcode = 
	{ action_respond_info("Runout Detected") }
	CONDITIONAL_BEEP i=3 dur=300 freq=400

[gcode_macro START_PRINT]
gcode = 
	DGUS_PRINT_START
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
	
	M140 S{BED_TEMP}
	
	G90
	
	SET_GCODE_OFFSET Z=0.0
	
	G28
	
	G1 Z5 F3000
	
	G1 Z0.15 F300
	
	EXCLUDE_OBJECT_DEFINE
	
	BED_MESH_CALIBRATE
	
	SMART_PARK
	
	M190 S{BED_TEMP}
	
	M109 S{EXTRUDER_TEMP}
	
	G28 XY
	G90
	
	LINE_PURGE

[gcode_macro END_PRINT]
gcode = 
	DGUS_PRINT_END
	
	M140 S0
	M104 S0
	M106 S0
	
	G91
	G1 X-2 Y-2 E-3 F300
	
	G1 Z10 F3000
	G90
	
	M84

[gcode_arcs]
resolution = 0.1

[t5uid1]
firmware = dgus_reloaded
update_interval = 1
machine_name = Sovol SV06 Plus
brightness = 0
x_min_inset = 0
x_max_inset = 300
y_min_inset = 0
y_max_inset = 300
x_min = 0
x_max = 300
y_min = 0
y_max = 300
z_min = 0
z_max = 340
volume = 78

[bed_mesh default3]
version = 1
points = 
	-0.358802, -0.374167, -0.395313, -0.389375, -0.447760, -0.479688, -0.560260
	-0.242083, -0.271510, -0.278802, -0.262760, -0.299844, -0.330260, -0.395365
	-0.155000, -0.156406, -0.152760, -0.129375, -0.195156, -0.212708, -0.283229
	-0.096823, -0.119219, -0.100000, -0.090156, -0.163438, -0.221979, -0.322083
	-0.048698, -0.079271, -0.086927, -0.079740, -0.184115, -0.277969, -0.415104
	-0.092813, -0.120781, -0.127031, -0.144740, -0.253594, -0.374531, -0.535885
	-0.110469, -0.114479, -0.138698, -0.172083, -0.309427, -0.440625, -0.642031
x_count = 7
y_count = 7
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 27.0
max_x = 285.0
min_y = 10.0
max_y = 269.97999999999996

[bed_mesh default4]
version = 1
points = 
	-0.327760, -0.313906, -0.274063, -0.201667, -0.167813, -0.101094, -0.089479
	-0.228125, -0.219948, -0.170625, -0.109063, -0.098490, -0.057188, -0.035208
	-0.103385, -0.082656, -0.048646, -0.000833, -0.047240, -0.021042, -0.054375
	-0.007031, -0.025156, -0.011875, 0.009427, -0.050208, -0.093073, -0.162760
	0.107552, 0.054323, 0.018437, 0.023698, -0.073021, -0.170573, -0.306042
	0.128594, 0.053021, -0.004896, -0.056719, -0.188750, -0.321198, -0.480781
	0.188021, 0.095000, -0.006563, -0.104896, -0.273438, -0.426250, -0.643594
x_count = 7
y_count = 7
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 27.0
max_x = 285.0
min_y = 10.0
max_y = 269.97999999999996

[bed_mesh default5]
version = 1
points = 
	-0.192813, -0.198385, -0.188906, -0.139635, -0.110729, -0.042813, -0.015052
	-0.135521, -0.155833, -0.144740, -0.097448, -0.077969, -0.017240, 0.024740
	-0.058698, -0.068073, -0.067865, -0.044063, -0.052083, 0.004323, 0.008021
	0.014115, -0.037240, -0.081042, -0.075417, -0.103698, -0.083385, -0.104427
	0.138646, 0.042240, -0.033073, -0.058385, -0.118438, -0.151458, -0.239740
	0.204792, 0.079323, -0.011354, -0.084479, -0.177396, -0.262500, -0.376146
	0.324219, 0.178021, 0.044896, -0.059896, -0.209531, -0.320260, -0.488542
x_count = 7
y_count = 7
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 27.0
max_x = 285.0
min_y = 10.0
max_y = 269.97999999999996

[bed_mesh default]
version = 1
points = 
	-0.217031, -0.230781, -0.211146, -0.187656, -0.212031, -0.212292, -0.253073
	-0.200885, -0.192760, -0.164688, -0.126094, -0.148958, -0.138802, -0.158177
	-0.151250, -0.116250, -0.057552, -0.009740, -0.062917, -0.077969, -0.129427
	-0.108698, -0.088229, -0.044427, -0.012865, -0.080573, -0.105573, -0.151979
	-0.088698, -0.062865, -0.013073, -0.005625, -0.080781, -0.131302, -0.194427
	-0.162083, -0.138385, -0.093646, -0.080938, -0.145000, -0.168958, -0.214792
	-0.213958, -0.172396, -0.120833, -0.082135, -0.134896, -0.146042, -0.216979
x_count = 7
y_count = 7
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 27.0
max_x = 283.14
min_y = 36.7459
max_y = 263.2459
=======================
extruder: pressure_advance: 0.040000
pressure_advance_smooth_time: 0.040000
Loaded MCU 'mcu' 117 commands (v0.12.0-387-gd56bb37c / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.35.2-2+14+b2) 2.35.2)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CLOCK_FREQ=72000000 MCU=stm32f103xe PWM_MAX=255 RECEIVE_WINDOW=192 RESERVE_PINS_serial=PA10,PA9 RESERVE_PINS_t5uid1=PB11,PB10 SERIAL_BAUD=250000 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Configured MCU 'mcu' (1024 moves)
toolhead: max_velocity: 300.000000
max_accel: 1500.000000
minimum_cruise_ratio: 0.500000
square_corner_velocity: 8.000000
Args: ['/home/nineball/klipper/klippy/klippy.py', '/home/nineball/printer_data/config/printer.cfg', '-l', '/home/nineball/printer_data/logs/klippy.log', '-I', '/home/nineball/printer_data/comms/klippy.serial', '-a', '/home/nineball/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-495-g10446e1f'
Branch: master
Remote: origin
Tracked URL: https://github.com/gbkwiatt/klipper
CPU: 4 core ?
Python: '3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]'
webhooks client 547802442960: {'program': 'Moonraker', 'version': 'v0.9.3-0-g71f9e67'}
=============== Log rollover at Mon Sep  9 18:36:19 2024 ===============
Stats 86431.1: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=40544201 bytes_read=27061322 bytes_retransmit=9 bytes_invalid=0 send_seq=1373139 receive_seq=1373138 retransmit_seq=2 srtt=0.005 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003718  heater_bed: target=0 temp=19.0 pwm=0.000 sysload=0.43 cputime=5574.094 memavail=7475832 print_time=86437.915 buffer_time=0.244 print_stall=5 extruder: target=0 temp=19.2 pwm=0.000
Attempting MCU 'mcu' reset command
webhooks client 547802442960: Disconnected
Restarting printer
Start printer at Mon Sep  9 18:36:20 2024 (1725928580.7 86432.5)
===== Config file =====
[idle_timeout]
timeout = 600

[force_move]
enable_force_move = true

[virtual_sdcard]
path = /home/nineball/printer_data/gcodes

[exclude_object]

[pause_resume]

[display_status]

[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration = 1
gcode = 
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0

[gcode_macro _globals]
variable_filament_sensor_enabled = 1
variable_beeping_enabled = 0
variable_bed_temp_over = 10
variable_kamp_enable = 0
variable_pre_purge_prime_length = 1.40
gcode = 

[gcode_macro CONDITIONAL_BEEP]
gcode = 
	
	{% set i = params.I|default(1)|int %}
	{% set dur = params.DUR|default(100)|int %}
	{% set freq = params.FREQ|default(2000)|int %}
	
	{% set BEEPING_ENABLED=printer["gcode_macro _globals"].beeping_enabled|default(-1)|int %}
	
	{% if BEEPING_ENABLED == 1 %}
	BEEP I={i} DUR={dur} FREQ={freq}
	{% endif %}

[gcode_macro ADJUST_FILAMENT_SENSOR_STATUS]
gcode = 
	
	{% set NEWSTATUS = params.ENABLE|default(-1)|int %}
	
	{% set FILAMENT_SENSOR_ENABLED=printer["gcode_macro _globals"].filament_sensor_enabled|default(-1)|int %}
	
	{% if FILAMENT_SENSOR_ENABLED == 1 and NEWSTATUS != -1 %}
	SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE={NEWSTATUS}
	{% endif %}

[gcode_macro M109]
rename_existing = M99109
gcode = 
	
	{% set s = params.S|float %}
	
	M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}
	{% if s != 0 %}
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}
	{% endif %}

[gcode_macro M190]
rename_existing = M99190
gcode = 
	
	{% set s = params.S|float %}
	
	M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}
	{% if s != 0 %}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}
	{% endif %}

[gcode_macro PURGE_LINE]
gcode = 
	{% set PRE_PURGE_PRIME_LENGTH=printer["gcode_macro _globals"].pre_purge_prime_length|default(1.40)|float %}
	ADJUST_FILAMENT_SENSOR_STATUS ENABLE=1
	
	
	{% set extrudeAmount = 26.6 %}
	{% set movementLength = 100.0 %}
	{% set movementSpeed = 15 * 60 %}
	{% set xStart = 0.5 %}
	{% set yStart = 0.5 %}
	
	
	{% set maxVelocity = printer.configfile.settings.printer.max_velocity|default(200)|int %}
	{% set maxVelocityAdjusted =  (0.95 * maxVelocity * 60)|int  %}
	
	G92 E0.0
	G90
	G0 X{xStart} Y{yStart} F{maxVelocityAdjusted}
	G1 Z0.4 F500.0
	M83
	G1 E{PRE_PURGE_PRIME_LENGTH} F500
	G1 X{xStart + movementLength} E{extrudeAmount} F{movementSpeed}
	
	G92 E0.0
	M82
	G1 Z5.0

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	PRINT_END
	BASE_CANCEL_PRINT

[gcode_macro PRINT_START]
gcode = 
	ADJUST_FILAMENT_SENSOR_STATUS ENABLE=1
	
	{% set bedtemp = params.BED|int %}
	{% set hotendtemp = params.HOTEND|int %}
	{% set chambertemp = params.CHAMBER|default(0)|int %}
	
	
	{% set bedtempSlicer = bedtemp %}
	{% set bedtempOver = printer["gcode_macro _globals"].bed_temp_over|default(0)|int %}
	{% set maxVelocity = printer.configfile.settings.printer.max_velocity|default(200)|int %}
	{% set maxVelocityAdjusted =  (0.90 * maxVelocity * 60)|int %}
	{% set kampEnabled=printer["gcode_macro _globals"].kamp_enable|default(0)|int %}
	
	{% if printer.configfile.settings.safe_z_home %}
	{% set startX = printer.configfile.settings.safe_z_home.home_xy_position[0]|float %}
	{% set startY = printer.configfile.settings.safe_z_home.home_xy_position[1]|float %}
	{% endif %}
	
	{% set bedtempAlmost = ((bedtemp - 2, 0, printer.heater_bed.temperature|int)|max, bedtemp)|max %}
	{% set hotendtempStepOne = ((hotendtemp, printer[printer.toolhead.extruder].temperature|int)|min, 150)|max %}
	{% set hotendtempStepTwo = ((hotendtemp, printer[printer.toolhead.extruder].temperature|int)|min, 170)|max %}
	
	
	{% if bedtempAlmost > bedtemp %}
	{% if (bedtempAlmost - bedtempOver) <= bedtemp %}
	{% set bedtemp = bedtempAlmost %}
	{% endif %}
	{% endif %}
	
	G90
	M140 S{bedtempAlmost}
	M104 S{hotendtempStepOne}
	G28 X Y
	{% if printer.configfile.settings.safe_z_home %}
	G1 X{startX} Y{startY} F{maxVelocityAdjusted}
	{% endif %}
	
	M190 S{bedtempAlmost}
	{% if kampEnabled == 0 %}
	M104 S{hotendtempStepTwo}
	{% endif %}
	M190 S{bedtemp}
	M140 S{bedtempSlicer}
	
	{% if kampEnabled == 0 %}
	BED_MESH_PROFILE LOAD=default
	M104 S{hotendtemp}
	G28 Z
	{% else %}
	G28 Z
	BED_MESH_CALIBRATE
	M104 S{hotendtemp}
	{% endif %}
	
	G1 X0 Y0 F{maxVelocityAdjusted}
	M109 S{hotendtemp}
	
	G1 Z20 F3000

[gcode_macro PRINT_END]
gcode = 
	ADJUST_FILAMENT_SENSOR_STATUS ENABLE=0
	CONDITIONAL_BEEP I=2 DUR=30 FREQ=8500
	{% set PRE_PURGE_PRIME_LENGTH=printer["gcode_macro _globals"].pre_purge_prime_length|default(1.40)|float %}
	
	M400
	G92 E0
	G1 E-{PRE_PURGE_PRIME_LENGTH} F400
	G91
	
	
	{% set zVelocity = printer.configfile.settings.printer.max_z_velocity|default(15)|int %}
	{% set maxVelocity = printer.configfile.settings.printer.max_velocity|default(200)|int %}
	{% set zVelocityAdjusted =  (0.95 * zVelocity * 60)|int  %}
	{% set maxVelocityAdjusted =  (0.95 * maxVelocity * 60)|int  %}
	
	
	{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
	{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
	{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
	
	
	{% if printer.toolhead.position.x < (max_x - 20) %}
	{% set x_safe = 20.0 %}
	{% else %}
	{% set x_safe = -20.0 %}
	{% endif %}
	
	{% if printer.toolhead.position.y < (max_y - 20) %}
	{% set y_safe = 20.0 %}
	{% else %}
	{% set y_safe = -20.0 %}
	{% endif %}
	
	{% set lift_height = 25.0 %}
	{% if printer.toolhead.position.z < (max_z - lift_height) %}
	{% set z_safe = lift_height %}
	{% else %}
	{% set z_safe = max_z - printer.toolhead.position.z %}
	{% endif %}
	
	G0 Z{z_safe} F{zVelocityAdjusted}
	G0 X{x_safe} Y{y_safe} F{maxVelocityAdjusted}
	TURN_OFF_HEATERS
	M107
	G90
	G0 X60 Y{max_y} F3600

[gcode_macro LOAD_FILAMENT]
gcode = 
	M83
	G1 E30 F300
	G1 E15 F150
	M82

[gcode_macro UNLOAD_FILAMENT]
gcode = 
	M83
	G1 E10 F300
	G1 E-40 F1800
	M82

[gcode_macro M600]
gcode = 
	CONDITIONAL_BEEP i=1 dur=300
	CONDITIONAL_BEEP i=1 dur=100
	CONDITIONAL_BEEP i=1 dur=100
	PAUSE

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
gcode = 
	
	{% set z = params.Z|default(10)|int %}
	
	{% if printer['pause_resume'].is_paused|int == 0 %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}
	
	ADJUST_FILAMENT_SENSOR_STATUS ENABLE=0
	
	SAVE_GCODE_STATE NAME=PAUSE
	BASE_PAUSE
	{% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}
	G91
	G1 Z{z} F900
	{% else %}
	{ action_respond_info("Pause zhop exceeds maximum Z height.") }
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
	{% endif %}
	G90
	G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000
	SAVE_GCODE_STATE NAME=PAUSEPARK
	M104 S0
	SET_IDLE_TIMEOUT TIMEOUT=43200
	{% endif %}

[gcode_macro RESUME]
rename_existing = BASE_RESUME
variable_zhop = 0
variable_etemp = 0
gcode = 
	
	{% set e = params.E|default(2.5)|int %}
	
	{% if printer['pause_resume'].is_paused|int == 1 %}
	ADJUST_FILAMENT_SENSOR_STATUS ENABLE=1
	
	SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
	{% if etemp > 0 %}
	M109 S{etemp|int}
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100
	G91
	M83
	{% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
	G1 Z{zhop * -1} E{e} F900
	{% else %}
	G1 Z{zhop * -1} F900
	{% endif %}
	RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60
	BASE_RESUME
	{% endif %}

[gcode_macro _CG28]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% endif %}

[gcode_macro BEEP]
description = BEEP I=3 DUR=200 FREQ=2000: Beep 3 times, for 200ms each, at 2kHz frequency.
gcode = 
	
	{% set i = params.I|default(1)|int %}
	{% set dur = [params.DUR|default(100)|int,255] | min %}
	
	{% for iteration in range(i|int) %}
	M300 P{dur}
	G4 P{dur}
	{% endfor %}

[gcode_macro PARKFRONT]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% endif %}
	SAVE_GCODE_STATE NAME=PARKFRONT
	G90
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z/2} F6000
	RESTORE_GCODE_STATE NAME=PARKFRONT

[gcode_macro PARKFRONTLOW]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% endif %}
	SAVE_GCODE_STATE NAME=PARKFRONT
	G90
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z20 F6000
	RESTORE_GCODE_STATE NAME=PARKFRONT

[gcode_macro PARKREAR]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% endif %}
	SAVE_GCODE_STATE NAME=PARKREAR
	G90
	G0 X{printer.toolhead.axis_minimum.x+10} Y{printer.toolhead.axis_maximum.y-10} Z{printer.toolhead.axis_maximum.z-50} F6000
	RESTORE_GCODE_STATE NAME=PARKREAR

[gcode_macro PARKCENTER]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% endif %}
	SAVE_GCODE_STATE NAME=PARKCENTER
	G90
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F6000
	RESTORE_GCODE_STATE NAME=PARKCENTER

[gcode_macro PARKBED]
gcode = 
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28
	{% endif %}
	SAVE_GCODE_STATE NAME=PARKBED
	G90
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z15 F6000
	RESTORE_GCODE_STATE NAME=PARKBED

[gcode_macro MECHANICAL_GANTRY_CALIBRATION]
gcode = 
	
	{% set my_current = params.CURRENT|default(0.20)|float %}
	
	{% set oldcurrent = printer.configfile.settings["tmc2209 stepper_z"].run_current %}
	{% set oldhold = printer.configfile.settings["tmc2209 stepper_z"].hold_current %}
	{% set x_max = printer.toolhead.axis_maximum.x %}
	{% set y_max = printer.toolhead.axis_maximum.y %}
	{% set z_max = printer.toolhead.axis_maximum.z %}
	{% set fast_move_z = printer.configfile.settings["printer"].max_z_velocity %}
	{% set fast_move = printer.configfile.settings["printer"].max_velocity %}
	M117 {printer.homed_axes}
	{% if printer.homed_axes != 'xyz' %}
	G28
	{% endif %}
	G90
	G0 X{x_max / 2} Y{y_max / 2} F{fast_move * 30 }
	
	G0 Z{z_max -5} F{fast_move_z * 60 }
	
	SET_TMC_CURRENT STEPPER=stepper_z CURRENT={my_current}
	
	{% if printer.configfile.settings["stepper_z1"] %}
	SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={my_current}
	{% endif %}
	
	CONDITIONAL_BEEP I=1
	G4 P200
	
	SET_KINEMATIC_POSITION Z={z_max - 25}
	
	G1 Z{z_max} F{6 * 60}
	CONDITIONAL_BEEP I=2
	G4 P10000
	G1 Z{z_max -6} F{6 * 60}
	CONDITIONAL_BEEP I=3
	G4 P200
	
	SET_TMC_CURRENT STEPPER=stepper_z CURRENT={oldcurrent} HOLDCURRENT={oldhold}
	
	{% if printer.configfile.settings["stepper_z1"] %}
	SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={oldcurrent} HOLDCURRENT={oldhold}
	{% endif %}
	
	G1 Z{z_max -30} F{6 * 60}
	
	G4 P200
	G28 Z

[gcode_macro G34]
gcode = 
	MECHANICAL_GANTRY_CALIBRATION

[gcode_macro PID_TEST_BED]
gcode = 
	
	{% set TARGETTEMP = params.TEMP|default(70)|int %}
	
	{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
	{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
	G28
	G90
	G1 X{max_x/2} Y{max_y/2} Z40 F6000
	PID_CALIBRATE HEATER=heater_bed TARGET={TARGETTEMP}

[gcode_macro PID_TEST_HOTEND]
gcode = 
	
	{% set TARGETTEMP = params.TEMP|default(245)|int %}
	
	{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
	{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
	G28
	G90
	G1 X{max_x/2} Y{max_y/2} Z10 F6000
	M106 S64
	PID_CALIBRATE HEATER=extruder TARGET={TARGETTEMP}
	M107

[gcode_macro PID_TEST_ALL]
gcode = 
	PID_TEST_BED
	PID_TEST_HOTEND
	SAVE_CONFIG

[gcode_macro DO_PROBE_CALIBRATE]
gcode = 
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=180
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM=60
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM=180
	G28
	PROBE_CALIBRATE

[gcode_macro DO_CREATE_MESH]
gcode = 
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=180
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM=60
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM=180
	G28
	_BED_MESH_CALIBRATE

[gcode_macro BED_MESH_CALIBRATE]
rename_existing = _BED_MESH_CALIBRATE
gcode = 
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}
	{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}
	{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}
	{% set kamp_settings = printer["gcode_macro _KAMP_Settings"] %}
	{% set verbose_enable = kamp_settings.verbose_enable | abs %}
	{% set probe_dock_enable = kamp_settings.probe_dock_enable | abs %}
	{% set attach_macro = kamp_settings.attach_macro | string %}
	{% set detach_macro = kamp_settings.detach_macro | string %}
	{% set mesh_margin = kamp_settings.mesh_margin | float %}
	{% set fuzz_amount = kamp_settings.fuzz_amount | float %}
	{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}
	{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}
	{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}
	{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}
	{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}
	{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}
	{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}
	
	{% set fuzz_range = range((0) | int, (fuzz_amount * 100) | int + 1) %}
	{% set adapted_x_min = x_min - mesh_margin - (fuzz_range | random / 100.0) %}
	{% set adapted_y_min = y_min - mesh_margin - (fuzz_range | random / 100.0) %}
	{% set adapted_x_max = x_max + mesh_margin + (fuzz_range | random / 100.0) %}
	{% set adapted_y_max = y_max + mesh_margin + (fuzz_range | random / 100.0) %}
	
	{% set adapted_x_min = [adapted_x_min , bed_mesh_min[0]] | max %}
	{% set adapted_y_min = [adapted_y_min , bed_mesh_min[1]] | max %}
	{% set adapted_x_max = [adapted_x_max , bed_mesh_max[0]] | min %}
	{% set adapted_y_max = [adapted_y_max , bed_mesh_max[1]] | min %}
	
	{% set points_x = (((adapted_x_max - adapted_x_min) / max_probe_point_distance_x) | round(method='ceil') | int) + 1 %}
	{% set points_y = (((adapted_y_max - adapted_y_min) / max_probe_point_distance_y) | round(method='ceil') | int) + 1 %}
	
	{% if (([points_x, points_y]|max) > 6) %}
	{% set algorithm = "bicubic" %}
	{% set min_points = 4 %}
	{% else %}
	{% set algorithm = "lagrange" %}
	{% set min_points = 3 %}
	{% endif %}
	
	{% set points_x = [points_x , min_points]|max %}
	{% set points_y = [points_y , min_points]|max %}
	{% set points_x = [points_x , probe_count[0]]|min %}
	{% set points_y = [points_y , probe_count[1]]|min %}
	
	{% if verbose_enable == True %}
	{% if printer.exclude_object.objects != [] %}
	
	{ action_respond_info( "Algorithm: {}.".format(
	(algorithm),
	)) }
	
	{ action_respond_info("Default probe count: {},{}.".format(
	(probe_count[0]),
	(probe_count[1]),
	)) }
	
	{ action_respond_info("Adapted probe count: {},{}.".format(
	(points_x),
	(points_y),
	)) }
	
	{action_respond_info("Default mesh bounds: {}, {}.".format(
	(bed_mesh_min[0],bed_mesh_min[1]),
	(bed_mesh_max[0],bed_mesh_max[1]),
	)) }
	
	{% if mesh_margin > 0 %}
	{action_respond_info("Mesh margin is {}, mesh bounds extended by {}mm.".format(
	(mesh_margin),
	(mesh_margin),
	)) }
	{% else %}
	{action_respond_info("Mesh margin is 0, margin not increased.")}
	{% endif %}
	
	{% if fuzz_amount > 0 %}
	{action_respond_info("Mesh point fuzzing enabled, points fuzzed up to {}mm.".format(
	(fuzz_amount),
	)) }
	{% else %}
	{action_respond_info("Fuzz amount is 0, mesh points not fuzzed.")}
	{% endif %}
	
	{ action_respond_info("Adapted mesh bounds: {}, {}.".format(
	(adapted_x_min, adapted_y_min),
	(adapted_x_max, adapted_y_max),
	)) }
	
	{action_respond_info("KAMP adjustments successful. Happy KAMPing!")}
	
	{% else %}
	
	{action_respond_info("No objects detected! Check your gcode and make sure that EXCLUDE_OBJECT_DEFINE is happening before BED_MESH_CALIBRATE is called. Defaulting to regular meshing.")}
	G4 P5000
	{% endif %}
	
	{% endif %}
	
	{% if probe_dock_enable == True %}
	{attach_macro}
	{% endif %}
	
	_BED_MESH_CALIBRATE mesh_min={adapted_x_min},{adapted_y_min} mesh_max={adapted_x_max},{adapted_y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y}
	
	{% if probe_dock_enable == True %}
	{detach_macro}
	{% endif %}

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
gcode = 
	
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	{% set cross_section = printer.configfile.settings.extruder.max_extrude_cross_section | float %}
	
	
	{% if printer.firmware_retraction is defined %}
	{% set RETRACT = G10 | string %}
	{% set UNRETRACT = G11 | string %}
	{% else %}
	{% set RETRACT = 'G1 E-.5 F2100' | string %}
	{% set UNRETRACT = 'G1 E.5 F2100' | string %}
	{% endif %}
	
	
	{% set verbose_enable = printer["gcode_macro _KAMP_Settings"].verbose_enable | abs %}
	{% set purge_height = printer["gcode_macro _KAMP_Settings"].purge_height | float %}
	{% set tip_distance = printer["gcode_macro _KAMP_Settings"].tip_distance | float %}
	{% set purge_margin = printer["gcode_macro _KAMP_Settings"].purge_margin | float %}
	{% set purge_amount = printer["gcode_macro _KAMP_Settings"].purge_amount | float %}
	{% set flow_rate = printer["gcode_macro _KAMP_Settings"].flow_rate | float %}
	
	
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set purge_x_min = (all_points | map(attribute=0) | min | default(0)) %}
	{% set purge_x_max = (all_points | map(attribute=0) | max | default(0)) %}
	{% set purge_y_min = (all_points | map(attribute=1) | min | default(0)) %}
	{% set purge_y_max = (all_points | map(attribute=1) | max | default(0)) %}
	
	{% set purge_x_center = ([((purge_x_max + purge_x_min) / 2) - (purge_amount / 2), 0] | max) %}
	{% set purge_y_center = ([((purge_y_max + purge_y_min) / 2) - (purge_amount / 2), 0] | max) %}
	
	{% set purge_x_origin = ([purge_x_min - purge_margin, 0] | max) %}
	{% set purge_y_origin = ([purge_y_min - purge_margin, 0] | max) %}
	
	
	{% set purge_move_speed = (flow_rate / 5.0) * 60 | float %}
	
	{% if cross_section < 5 %}
	
	{action_respond_info("[Extruder] max_extrude_cross_section is insufficient for purge, please set it to 5 or greater. Purge skipped.")}
	
	{% else %}
	
	{% if verbose_enable == True %}
	
	{action_respond_info("Moving filament tip {}mms".format(
	(tip_distance),
	)) }
	{% endif %}
	
	{% if printer.firmware_retraction is defined %}
	{action_respond_info("KAMP purge is using firmware retraction.")}
	{% else %}
	{action_respond_info("KAMP purge is not using firmware retraction, it is recommended to configure it.")}
	{% endif %}
	
	{% if purge_y_origin > 0 %}
	
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_center),
	(purge_y_origin),
	(purge_amount),
	(flow_rate),
	)) }
	
	{% else %}
	
	{action_respond_info("KAMP purge starting at {}, {} and purging {}mm of filament, requested flow rate is {}mm3/s.".format(
	(purge_x_origin),
	(purge_y_center),
	(purge_amount),
	(flow_rate),
	)) }
	
	{% endif %}
	
	SAVE_GCODE_STATE NAME=Prepurge_State
	
	{% if purge_y_origin > 0 %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_center} Y{purge_y_origin}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 X{purge_x_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 X{purge_x_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	
	{% else %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{purge_x_origin} Y{purge_y_center}
	G0 Z{purge_height}
	M83
	G1 E{tip_distance} F{purge_move_speed}
	G1 Y{purge_y_center + purge_amount} E{purge_amount} F{purge_move_speed}
	{RETRACT}
	G0 Y{purge_y_center + purge_amount + 10} F{travel_speed}
	G92 E0
	M82
	G0 Z{purge_height * 2} F{travel_speed}
	
	{% endif %}
	
	RESTORE_GCODE_STATE NAME=Prepurge_State
	
	{% endif %}

[gcode_macro SMART_PARK]
description = Parks your printhead near the print area for pre-print hotend heating.
gcode = 
	
	{% set kamp_settings = printer["gcode_macro _KAMP_Settings"] %}
	{% set z_height = kamp_settings.smart_park_height | float %}
	{% set purge_margin = kamp_settings.purge_margin | float %}
	{% set verbose_enable = kamp_settings.verbose_enable | abs %}
	{% set center_x = printer.toolhead.axis_maximum.x / 2 | float %}
	{% set center_y = printer.toolhead.axis_maximum.y / 2 | float %}
	{% set axis_minimum_x = printer.toolhead.axis_minimum.x | float %}
	{% set axis_minimum_y = printer.toolhead.axis_minimum.y | float %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_min = all_points | map(attribute=0) | min | default(center_x) %}
	{% set y_min = all_points | map(attribute=1) | min | default(center_y) %}
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	
	{% if purge_margin > 0 and x_min != center_x and y_min != center_y %}
	{% set x_min = [ x_min - purge_margin , x_min ] | min %}
	{% set y_min = [ y_min - purge_margin , y_min ] | min %}
	{% set x_min = [ x_min , axis_minimum_x ] | max %}
	{% set y_min = [ y_min , axis_minimum_y ] | max %}
	{% endif %}
	
	{% if verbose_enable == True %}
	
	{ action_respond_info("Smart Park location: {},{}.".format(
	(x_min),
	(y_min),
	)) }
	
	{% endif %}
	
	{% if printer.toolhead.position.z < z_height %}
	G0 Z{z_height}
	{% endif %}
	G0 X{x_min} Y{y_min} F{travel_speed}
	G0 Z{z_height}

[gcode_macro _KAMP_Settings]
description = This macro contains all adjustable settings for KAMP
variable_verbose_enable = True
variable_mesh_margin = 0
variable_fuzz_amount = 0
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
variable_purge_height = 0.8
variable_tip_distance = 0
variable_purge_margin = 10
variable_purge_amount = 30
variable_flow_rate = 12
variable_smart_park_height = 10
gcode = 
	
	{action_respond_info(" Running the KAMP_Settings macro does nothing, it is only used for storing KAMP settings. ")}

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	
	
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	
	M400
	G28
	
	{% if printer.configfile.settings.quad_gantry_level %}
	{% if printer.quad_gantry_level.applied == False %}
	QUAD_GANTRY_LEVEL
	G28 Z
	{% endif %}
	{% endif %}
	
	G90
	G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
	M400
	G28 X Y
	G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
	G4 P1000
	GET_POSITION
	
	
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	{% for i in range(iterations) %}
	
	G0 X{x_min} Y{y_min} F{speed*60}
	G0 X{x_max} Y{y_max} F{speed*60}
	G0 X{x_min} Y{y_min} F{speed*60}
	G0 X{x_max} Y{y_min} F{speed*60}
	G0 X{x_min} Y{y_max} F{speed*60}
	G0 X{x_max} Y{y_min} F{speed*60}
	
	
	G0 X{x_min} Y{y_min} F{speed*60}
	G0 X{x_min} Y{y_max} F{speed*60}
	G0 X{x_max} Y{y_max} F{speed*60}
	G0 X{x_max} Y{y_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	
	
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
	
	
	M400
	G28
	
	G90
	G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
	G4 P1000
	GET_POSITION
	
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED

[gcode_macro GET_TIMELAPSE_SETUP]
description = Print the Timelapse setup
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set output_txt = ["Timelapse Setup:"] %}
	{% set _dummy = output_txt.append("enable: %s" % tl.enable) %}
	{% set _dummy = output_txt.append("park: %s" % tl.park.enable) %}
	{% if tl.park.enable %}
	{% set _dummy = output_txt.append("park position: %s time: %s s" % (tl.park.pos, tl.park.time)) %}
	{% set _dummy = output_txt.append("park cord x:%s y:%s dz:%s" % (tl.park.coord.x, tl.park.coord.y, tl.park.coord.dz)) %}
	{% set _dummy = output_txt.append("travel speed: %s mm/s" % tl.speed.travel) %}
	{% endif %}
	{% set _dummy = output_txt.append("fw_retract: %s" % tl.extruder.fw_retract) %}
	{% if not tl.extruder.fw_retract %}
	{% set _dummy = output_txt.append("retract: %s mm speed: %s mm/s" % (tl.extruder.retract, tl.speed.retract)) %}
	{% set _dummy = output_txt.append("extrude: %s mm speed: %s mm/s" % (tl.extruder.extrude, tl.speed.extrude)) %}
	{% endif %}
	{% set _dummy = output_txt.append("verbose: %s" % tl.verbose) %}
	{action_respond_info(output_txt|join("\n"))}

[gcode_macro _SET_TIMELAPSE_SETUP]
description = Set user parameters for timelapse
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	{% set park = {'min'   : {'x': (min.x / 1.42)|round(3) if round_bed else min.x|round(3),
	'y': (min.y / 1.42)|round(3) if round_bed else min.y|round(3)},
	'max'   : {'x': (max.x / 1.42)|round(3) if round_bed else max.x|round(3),
	'y': (max.y / 1.42)|round(3) if round_bed else max.y|round(3)},
	'center': {'x': (max.x-(max.x-min.x)/2)|round(3),
	'y': (max.y-(max.y-min.y)/2)|round(3)}} %}
	
	{% if params.ENABLE %}
	{% if params.ENABLE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=enable VALUE={True if params.ENABLE|lower == 'true' else False}
	{% else %}
	{action_raise_error("ENABLE=%s not supported. Allowed values are [True, False]" % params.ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.VERBOSE %}
	{% if params.VERBOSE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=verbose VALUE={True if params.VERBOSE|lower == 'true' else False}
	{% else %}
	{action_raise_error("VERBOSE=%s not supported. Allowed values are [True, False]" % params.VERBOSE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_X %}
	{% if params.CUSTOM_POS_X|float >= min.x and params.CUSTOM_POS_X|float <= max.x %}
	{% set _dummy = tl.park.custom.update({'x':params.CUSTOM_POS_X|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_X=%s must be within [%s - %s]" % (params.CUSTOM_POS_X, min.x, max.x))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_Y %}
	{% if params.CUSTOM_POS_Y|float >= min.y and params.CUSTOM_POS_Y|float <= max.y %}
	{% set _dummy = tl.park.custom.update({'y':params.CUSTOM_POS_Y|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_Y=%s must be within [%s - %s]" % (params.CUSTOM_POS_Y, min.y, max.y))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_DZ %}
	{% if params.CUSTOM_POS_DZ|float >= min.z and params.CUSTOM_POS_DZ|float <= max.z %}
	{% set _dummy = tl.park.custom.update({'dz':params.CUSTOM_POS_DZ|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_DZ=%s must be within [%s - %s]" % (params.CUSTOM_POS_DZ, min.z, max.z))}
	{% endif %}
	{% endif %}
	{% if params.PARK_ENABLE %}
	{% if params.PARK_ENABLE|lower is in ['true', 'false'] %}
	{% set _dummy = tl.park.update({'enable':True if params.PARK_ENABLE|lower == 'true' else False}) %}
	{% else %}
	{action_raise_error("PARK_ENABLE=%s not supported. Allowed values are [True, False]" % params.PARK_ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.PARK_POS %}
	{% if params.PARK_POS|lower is in ['center','front_left','front_right','back_left','back_right','custom','x_only','y_only'] %}
	{% set dic = {'center'      : {'x': park.center.x   , 'y': park.center.y   , 'dz': 1                },
	'front_left'  : {'x': park.min.x      , 'y': park.min.y      , 'dz': 0                },
	'front_right' : {'x': park.max.x      , 'y': park.min.y      , 'dz': 0                },
	'back_left'   : {'x': park.min.x      , 'y': park.max.y      , 'dz': 0                },
	'back_right'  : {'x': park.max.x      , 'y': park.max.y      , 'dz': 0                },
	'custom'      : {'x': tl.park.custom.x, 'y': tl.park.custom.y, 'dz': tl.park.custom.dz},
	'x_only'      : {'x': tl.park.custom.x, 'y': 'none'          , 'dz': tl.park.custom.dz},
	'y_only'      : {'x': 'none'          , 'y': tl.park.custom.y, 'dz': tl.park.custom.dz}} %}
	{% set _dummy = tl.park.update({'pos':params.PARK_POS|lower}) %}
	{% set _dummy = tl.park.update({'coord':dic[tl.park.pos]}) %}
	{% else %}
	{action_raise_error("PARK_POS=%s not supported. Allowed values are [CENTER, FRONT_LEFT, FRONT_RIGHT, BACK_LEFT, BACK_RIGHT, CUSTOM, X_ONLY, Y_ONLY]"
	% params.PARK_POS|upper)}
	{% endif %}
	{% endif %}
	{% if params.PARK_TIME %}
	{% if params.PARK_TIME|float >= 0.0 %}
	{% set _dummy = tl.park.update({'time':params.PARK_TIME|float|round(3)}) %}
	{% else %}
	{action_raise_error("PARK_TIME=%s must be a positive number" % params.PARK_TIME)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=park VALUE="{tl.park}"
	{% if params.TRAVEL_SPEED %}
	{% if params.TRAVEL_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'travel':params.TRAVEL_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("TRAVEL_SPEED=%s must be larger than 0" % params.TRAVEL_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_SPEED %}
	{% if params.RETRACT_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'retract':params.RETRACT_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_SPEED=%s must be larger than 0" % params.RETRACT_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.EXTRUDE_SPEED %}
	{% if params.EXTRUDE_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'extrude':params.EXTRUDE_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_SPEED=%s must be larger than 0" % params.EXTRUDE_SPEED)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=speed VALUE="{tl.speed}"
	{% if params.EXTRUDE_DISTANCE %}
	{% if params.EXTRUDE_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'extrude':params.EXTRUDE_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_DISTANCE=%s must be specified as positiv number" % params.EXTRUDE_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_DISTANCE %}
	{% if params.RETRACT_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'retract':params.RETRACT_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_DISTANCE=%s must be specified as positiv number" % params.RETRACT_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.FW_RETRACT %}
	{% if params.FW_RETRACT|lower is in ['true', 'false'] %}
	{% if 'firmware_retraction' in printer.configfile.settings %}
	{% set _dummy = tl.extruder.update({'fw_retract': True if params.FW_RETRACT|lower == 'true' else False}) %}
	{% else %}
	{% set _dummy = tl.extruder.update({'fw_retract':False}) %}
	{% if params.FW_RETRACT|capitalize == 'True' %}
	{action_raise_error("[firmware_retraction] not defined in printer.cfg. Can not enable fw_retract")}
	{% endif %}
	{% endif %}
	{% else %}
	{action_raise_error("FW_RETRACT=%s not supported. Allowed values are [True, False]" % params.FW_RETRACT|capitalize)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=extruder VALUE="{tl.extruder}"
	{% if printer.configfile.settings['gcode_macro pause'] is defined %}
	{% set _dummy = tl.macro.update({'pause': printer.configfile.settings['gcode_macro pause'].rename_existing}) %}
	{% endif %}
	{% if printer.configfile.settings['gcode_macro resume'] is defined %}
	{% set _dummy = tl.macro.update({'resume': printer.configfile.settings['gcode_macro resume'].rename_existing}) %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=macro VALUE="{tl.macro}"

[gcode_macro TIMELAPSE_TAKE_FRAME]
description = Take Timelapse shoot
variable_enable = False
variable_takingframe = False
variable_park = {'enable': False,
	'pos'   : 'center',
	'time'  : 0.1,
	'custom': {'x': 0, 'y': 0, 'dz': 0},
	'coord' : {'x': 0, 'y': 0, 'dz': 0}}
variable_extruder = {'fw_retract': False,
	'retract': 1.0,
	'extrude': 1.0}
variable_speed = {'travel': 100,
	'retract': 15,
	'extrude': 15}
variable_verbose = True
variable_check_time = 0.5
variable_restore = {'absolute': {'coordinates': True, 'extrude': True}, 'speed': 1500, 'e':0, 'factor': {'speed': 1.0, 'extrude': 1.0}}
variable_macro = {'pause': 'PAUSE', 'resume': 'RESUME'}
variable_is_paused = False
gcode = 
	{% set hyperlapse = True if params.HYPERLAPSE and params.HYPERLAPSE|lower =='true' else False %}
	{% if enable %}
	{% if (hyperlapse and printer['gcode_macro HYPERLAPSE'].run) or
	(not hyperlapse and not printer['gcode_macro HYPERLAPSE'].run) %}
	{% if park.enable %}
	{% set pos = {'x': 'X' + park.coord.x|string if park.pos != 'y_only' else '',
	'y': 'Y' + park.coord.y|string if park.pos != 'x_only' else '',
	'z': 'Z'+ [printer.gcode_move.gcode_position.z + park.coord.dz, printer.toolhead.axis_maximum.z]|min|string} %}
	{% set restore = {'absolute': {'coordinates': printer.gcode_move.absolute_coordinates,
	'extrude'    : printer.gcode_move.absolute_extrude},
	'speed'   : printer.gcode_move.speed,
	'e'       : printer.gcode_move.gcode_position.e,
	'factor'  : {'speed'  : printer.gcode_move.speed_factor,
	'extrude': printer.gcode_move.extrude_factor}} %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=restore VALUE="{restore}"
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, minimum extruder temperature not reached!")}{% endif %}
	{% else %}
	{% if extruder.fw_retract %}
	G10
	{% else %}
	M83
	G0 E-{extruder.retract} F{speed.retract * 60}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=True
	{macro.pause}
	SET_GCODE_OFFSET X=0 Y=0
	G90
	{% if "xyz" not in printer.toolhead.homed_axes %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, axis not homed yet!")}{% endif %}
	{% else %}
	G0 {pos.x} {pos.y} {pos.z} F{speed.travel * 60}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=takingframe VALUE=True
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION={check_time}
	M400
	{% endif %}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE={hyperlapse}
	{% endif %}
	{% else %}
	{% if verbose %}{action_respond_info("Timelapse: disabled, take frame ignored")}{% endif %}
	{% endif %}

[gcode_macro _TIMELAPSE_NEW_FRAME]
description = action call for timelapse shoot. must be a seperate macro
gcode = 
	{action_call_remote_method("timelapse_newframe",
	macropark=printer['gcode_macro TIMELAPSE_TAKE_FRAME'].park,
	hyperlapse=params.HYPERLAPSE)}

[delayed_gcode _WAIT_TIMELAPSE_TAKE_FRAME]
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set factor = {'speed': printer.gcode_move.speed_factor, 'extrude': printer.gcode_move.extrude_factor} %}
	{% if tl.takingframe %}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION={tl.check_time}
	{% else %}
	{tl.macro.resume} VELOCITY={tl.speed.travel}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=False
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{action_respond_info("Timelapse: Warning minimum extruder temperature not reached!")}
	{% else %}
	{% if tl.extruder.fw_retract %}
	G11
	{% else %}
	G0 E{tl.extruder.extrude} F{tl.speed.extrude * 60}
	G0 F{tl.restore.speed}
	{% if tl.restore.absolute.extrude %}
	M82
	G92 E{tl.restore.e}
	{% endif %}
	{% endif %}
	{% endif %}
	{% if tl.restore.factor.speed   != factor.speed   %} M220 S{(factor.speed*100)|round(0)}   {% endif %}
	{% if tl.restore.factor.extrude != factor.extrude %} M221 S{(factor.extrude*100)|round(0)} {% endif %}
	{% if not tl.restore.absolute.coordinates %} G91 {% endif %}
	{% endif %}

[gcode_macro HYPERLAPSE]
description = Start/Stop a hyperlapse recording
variable_cycle = 0
variable_run = False
gcode = 
	{% set cycle = params.CYCLE|default(30)|int %}
	{% if params.ACTION and params.ACTION|lower == 'start' %}
	{action_respond_info("Hyperlapse: frames started (Cycle %d sec)" % cycle)}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=True
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=cycle VALUE={cycle}
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True
	{% elif params.ACTION and params.ACTION|lower == 'stop' %}
	{% if run %}{action_respond_info("Hyperlapse: frames stopped")}{% endif %}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=False
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION=0
	{% else %}
	{action_raise_error("Hyperlapse: No valid input parameter
	Use:
	- HYPERLAPSE ACTION=START [CYCLE=time]
	- HYPERLAPSE ACTION=STOP")}
	{% endif %}

[delayed_gcode _HYPERLAPSE_LOOP]
gcode = 
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={printer["gcode_macro HYPERLAPSE"].cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True

[gcode_macro TIMELAPSE_RENDER]
description = Render Timelapse video and wait for the result
variable_render = False
variable_run_identifier = 0
gcode = 
	{action_respond_info("Timelapse: Rendering started")}
	{action_call_remote_method("timelapse_render", byrendermacro="True")}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=render VALUE=True
	{printer.configfile.settings['gcode_macro pause'].rename_existing}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5

[delayed_gcode _WAIT_TIMELAPSE_RENDER]
gcode = 
	{% set ri = printer['gcode_macro TIMELAPSE_RENDER'].run_identifier % 4 %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=run_identifier VALUE={ri + 1}
	{% if printer['gcode_macro TIMELAPSE_RENDER'].render %}
	M117 Rendering {['-','\\','|','/'][ri]}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5
	{% else %}
	{action_respond_info("Timelapse: Rendering finished")}
	M117
	{printer.configfile.settings['gcode_macro resume'].rename_existing}
	{% endif %}

[gcode_macro TEST_STREAM_DELAY]
description = Helper macro to find stream and park delay
gcode = 
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set act = printer.toolhead.position %}
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% if act.z > 5.0 %}
	G0 X{min.x + 5.0} F{tl.speed.travel|int * 60}
	G0 X{(max.x-min.x)/2}
	G4 P{tl.park.time|float * 1000}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE=FALSE
	G0 X{max.x - 5.0}
	{% else %}
	{action_raise_error("Toolhead z %.3f to low. Please place head above z = 5.0" % act.z)}
	{% endif %}

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command

[printer]
kinematics = cartesian
max_velocity = 300
max_accel = 2500
max_z_velocity = 15
max_z_accel = 45
square_corner_velocity = 8.0

[stepper_x]
step_pin = PC2
dir_pin = !PB9
enable_pin = !PC3
microsteps = 128
rotation_distance = 40
endstop_pin = tmc2209_stepper_x:virtual_endstop
position_endstop = 0
position_max = 304
position_min = 0
homing_speed = 40
homing_retract_dist = 0

[tmc2209 stepper_x]
uart_pin = PC1
run_current = 0.820
stealthchop_threshold = 0
interpolate = False
sense_resistor = 0.150
uart_address = 3
driver_sgthrs = 86
diag_pin = PA5

[stepper_y]
step_pin = PB8
dir_pin = PB7
enable_pin = !PC3
microsteps = 128
rotation_distance = 40
endstop_pin = tmc2209_stepper_y:virtual_endstop
position_endstop = 0
position_max = 305
position_min = 0
homing_speed = 40
homing_retract_dist = 0

[tmc2209 stepper_y]
uart_pin = PC0
run_current = 0.880
stealthchop_threshold = 0
interpolate = False
sense_resistor = 0.150
uart_address = 3
driver_sgthrs = 110
diag_pin = PA6

[stepper_z]
step_pin = PB6
dir_pin = !PB5
enable_pin = !PC3
microsteps = 128
rotation_distance = 4
endstop_pin = probe:z_virtual_endstop
position_min = -4
position_max = 350
homing_speed = 4

[tmc2209 stepper_z]
uart_pin = PA15
run_current = 0.800
stealthchop_threshold = 0
interpolate = False
sense_resistor = 0.150
uart_address = 3
diag_pin = PA7

[extruder]
step_pin = PB4
dir_pin = !PB3
enable_pin = !PC3
microsteps = 128
rotation_distance = 4.42
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = PA1
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC5
min_temp = 0
max_temp = 300
max_extrude_only_distance = 150.0
max_extrude_cross_section = 5
control = pid
pid_kp = 23.619
pid_ki = 1.750
pid_kd = 79.715

[tmc2209 extruder]
uart_pin = PC14
run_current = 0.550
stealthchop_threshold = 0
interpolate = False
sense_resistor = 0.150
uart_address = 3

[input_shaper]
shaper_freq_x = 49
shaper_type_x = mzv
shaper_freq_y = 29.2
shaper_type_y = mzv

[firmware_retraction]
retract_length = 0.3
retract_speed = 45
unretract_speed = 30

[heater_bed]
heater_pin = PA2
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC4
min_temp = 0
max_temp = 110
control = pid
pid_kp = 69.191
pid_ki = 0.726
pid_kd = 1647.611

[probe]
pin = PB1
x_offset = 27
y_offset = -20
samples = 3
samples_result = average
samples_tolerance = 0.05
samples_tolerance_retries = 10
z_offset = 1.950

[safe_z_home]
home_xy_position = 123, 170
speed = 100.0
z_hop = 10
z_hop_speed = 15

[bed_mesh]
speed = 175
mesh_min = 27, 10
mesh_max = 303, 280
probe_count = 7, 7
algorithm = bicubic
fade_start = 1
fade_end = 10
fade_target = 0

[axis_twist_compensation]
calibrate_start_x = 27
calibrate_end_x = 272
calibrate_y = 154

[fan]
pin = PA0

[screws_tilt_adjust]
screw1_name = center front left base
screw1 = 84, 136
screw2_name = front left
screw2 = 5, 55
screw3_name = front right
screw3 = 244, 55
screw4_name = center front right
screw4 = 164, 136
screw5_name = center back left
screw5 = 84, 216
screw6_name = center back right
screw6 = 164, 216
screw7_name = back left
screw7 = 5, 295
screw8_name = back right
screw8 = 244, 295
horizontal_move_z = 10
screw_thread = CCW-M4

[filament_switch_sensor filament_sensor]
switch_pin = PA4
pause_on_runout = True
insert_gcode = 
	{ action_respond_info("Insert Detected") }
runout_gcode = 
	{ action_respond_info("Runout Detected") }
	CONDITIONAL_BEEP i=3 dur=300 freq=400

[gcode_macro START_PRINT]
gcode = 
	DGUS_PRINT_START
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
	
	M140 S{BED_TEMP}
	
	G90
	
	SET_GCODE_OFFSET Z=0.0
	
	G28
	
	G1 Z5 F3000
	
	G1 Z0.15 F300
	
	EXCLUDE_OBJECT_DEFINE
	
	BED_MESH_CALIBRATE
	
	SMART_PARK
	
	M190 S{BED_TEMP}
	
	M109 S{EXTRUDER_TEMP}
	
	G28 XY
	G90
	
	LINE_PURGE

[gcode_macro END_PRINT]
gcode = 
	DGUS_PRINT_END
	
	M140 S0
	M104 S0
	M106 S0
	
	G91
	G1 X-2 Y-2 E-3 F300
	
	G1 Z10 F3000
	G90
	
	M84

[gcode_arcs]
resolution = 0.1

[t5uid1]
firmware = dgus_reloaded
update_interval = 1
machine_name = Sovol SV06 Plus
brightness = 0
x_min_inset = 0
x_max_inset = 300
y_min_inset = 0
y_max_inset = 300
x_min = 0
x_max = 300
y_min = 0
y_max = 300
z_min = 0
z_max = 340
volume = 78

[bed_mesh default3]
version = 1
points = 
	-0.358802, -0.374167, -0.395313, -0.389375, -0.447760, -0.479688, -0.560260
	-0.242083, -0.271510, -0.278802, -0.262760, -0.299844, -0.330260, -0.395365
	-0.155000, -0.156406, -0.152760, -0.129375, -0.195156, -0.212708, -0.283229
	-0.096823, -0.119219, -0.100000, -0.090156, -0.163438, -0.221979, -0.322083
	-0.048698, -0.079271, -0.086927, -0.079740, -0.184115, -0.277969, -0.415104
	-0.092813, -0.120781, -0.127031, -0.144740, -0.253594, -0.374531, -0.535885
	-0.110469, -0.114479, -0.138698, -0.172083, -0.309427, -0.440625, -0.642031
x_count = 7
y_count = 7
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 27.0
max_x = 285.0
min_y = 10.0
max_y = 269.97999999999996

[bed_mesh default4]
version = 1
points = 
	-0.327760, -0.313906, -0.274063, -0.201667, -0.167813, -0.101094, -0.089479
	-0.228125, -0.219948, -0.170625, -0.109063, -0.098490, -0.057188, -0.035208
	-0.103385, -0.082656, -0.048646, -0.000833, -0.047240, -0.021042, -0.054375
	-0.007031, -0.025156, -0.011875, 0.009427, -0.050208, -0.093073, -0.162760
	0.107552, 0.054323, 0.018437, 0.023698, -0.073021, -0.170573, -0.306042
	0.128594, 0.053021, -0.004896, -0.056719, -0.188750, -0.321198, -0.480781
	0.188021, 0.095000, -0.006563, -0.104896, -0.273438, -0.426250, -0.643594
x_count = 7
y_count = 7
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 27.0
max_x = 285.0
min_y = 10.0
max_y = 269.97999999999996

[bed_mesh default5]
version = 1
points = 
	-0.192813, -0.198385, -0.188906, -0.139635, -0.110729, -0.042813, -0.015052
	-0.135521, -0.155833, -0.144740, -0.097448, -0.077969, -0.017240, 0.024740
	-0.058698, -0.068073, -0.067865, -0.044063, -0.052083, 0.004323, 0.008021
	0.014115, -0.037240, -0.081042, -0.075417, -0.103698, -0.083385, -0.104427
	0.138646, 0.042240, -0.033073, -0.058385, -0.118438, -0.151458, -0.239740
	0.204792, 0.079323, -0.011354, -0.084479, -0.177396, -0.262500, -0.376146
	0.324219, 0.178021, 0.044896, -0.059896, -0.209531, -0.320260, -0.488542
x_count = 7
y_count = 7
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 27.0
max_x = 285.0
min_y = 10.0
max_y = 269.97999999999996

[bed_mesh default]
version = 1
points = 
	-0.217031, -0.230781, -0.211146, -0.187656, -0.212031, -0.212292, -0.253073
	-0.200885, -0.192760, -0.164688, -0.126094, -0.148958, -0.138802, -0.158177
	-0.151250, -0.116250, -0.057552, -0.009740, -0.062917, -0.077969, -0.129427
	-0.108698, -0.088229, -0.044427, -0.012865, -0.080573, -0.105573, -0.151979
	-0.088698, -0.062865, -0.013073, -0.005625, -0.080781, -0.131302, -0.194427
	-0.162083, -0.138385, -0.093646, -0.080938, -0.145000, -0.168958, -0.214792
	-0.213958, -0.172396, -0.120833, -0.082135, -0.134896, -0.146042, -0.216979
x_count = 7
y_count = 7
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 27.0
max_x = 283.14
min_y = 36.7459
max_y = 263.2459
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
webhooks client 547802443200: New connection
webhooks client 547802443200: Client info {'program': 'Moonraker', 'version': 'v0.9.3-0-g71f9e67'}
Loaded MCU 'mcu' 117 commands (v0.12.0-387-gd56bb37c / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.35.2-2+14+b2) 2.35.2)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CLOCK_FREQ=72000000 MCU=stm32f103xe PWM_MAX=255 RECEIVE_WINDOW=192 RESERVE_PINS_serial=PA10,PA9 RESERVE_PINS_t5uid1=PB11,PB10 SERIAL_BAUD=250000 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Sending MCU 'mcu' printer configuration...
Configured MCU 'mcu' (1024 moves)
Enabling TMC virtual enable for 'stepper_x'
Enabling TMC virtual enable for 'stepper_y'
Enabling TMC virtual enable for 'stepper_z'
Enabling TMC virtual enable for 'extruder'
Starting heater checks for heater_bed
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (0.0, 30.0)     | (27.0, 10.0)
  1   | (46.0, 30.0)    | (73.0, 10.0)
  2   | (92.0, 30.0)    | (119.0, 10.0)
  3   | (138.0, 30.0)   | (165.0, 10.0)
  4   | (184.0, 30.0)   | (211.0, 10.0)
  5   | (230.0, 30.0)   | (257.0, 10.0)
  6   | (276.0, 30.0)   | (303.0, 10.0)
  7   | (276.0, 75.0)   | (303.0, 55.0)
  8   | (230.0, 75.0)   | (257.0, 55.0)
  9   | (184.0, 75.0)   | (211.0, 55.0)
  10  | (138.0, 75.0)   | (165.0, 55.0)
  11  | (92.0, 75.0)    | (119.0, 55.0)
  12  | (46.0, 75.0)    | (73.0, 55.0)
  13  | (0.0, 75.0)     | (27.0, 55.0)
  14  | (0.0, 120.0)    | (27.0, 100.0)
  15  | (46.0, 120.0)   | (73.0, 100.0)
  16  | (92.0, 120.0)   | (119.0, 100.0)
  17  | (138.0, 120.0)  | (165.0, 100.0)
  18  | (184.0, 120.0)  | (211.0, 100.0)
  19  | (230.0, 120.0)  | (257.0, 100.0)
  20  | (276.0, 120.0)  | (303.0, 100.0)
  21  | (276.0, 165.0)  | (303.0, 145.0)
  22  | (230.0, 165.0)  | (257.0, 145.0)
  23  | (184.0, 165.0)  | (211.0, 145.0)
  24  | (138.0, 165.0)  | (165.0, 145.0)
  25  | (92.0, 165.0)   | (119.0, 145.0)
  26  | (46.0, 165.0)   | (73.0, 145.0)
  27  | (0.0, 165.0)    | (27.0, 145.0)
  28  | (0.0, 210.0)    | (27.0, 190.0)
  29  | (46.0, 210.0)   | (73.0, 190.0)
  30  | (92.0, 210.0)   | (119.0, 190.0)
  31  | (138.0, 210.0)  | (165.0, 190.0)
  32  | (184.0, 210.0)  | (211.0, 190.0)
  33  | (230.0, 210.0)  | (257.0, 190.0)
  34  | (276.0, 210.0)  | (303.0, 190.0)
  35  | (276.0, 255.0)  | (303.0, 235.0)
  36  | (230.0, 255.0)  | (257.0, 235.0)
  37  | (184.0, 255.0)  | (211.0, 235.0)
  38  | (138.0, 255.0)  | (165.0, 235.0)
  39  | (92.0, 255.0)   | (119.0, 235.0)
  40  | (46.0, 255.0)   | (73.0, 235.0)
  41  | (0.0, 255.0)    | (27.0, 235.0)
  42  | (0.0, 300.0)    | (27.0, 280.0)
  43  | (46.0, 300.0)   | (73.0, 280.0)
  44  | (92.0, 300.0)   | (119.0, 280.0)
  45  | (138.0, 300.0)  | (165.0, 280.0)
  46  | (184.0, 300.0)  | (211.0, 280.0)
  47  | (230.0, 300.0)  | (257.0, 280.0)
  48  | (276.0, 300.0)  | (303.0, 280.0)
Starting heater checks for extruder
Write g-code response
Traceback (most recent call last):
  File "/home/nineball/klipper/klippy/gcode.py", line 459, in _respond_raw
    os.write(self.fd, (msg+"\n").encode())
BlockingIOError: [Errno 11] Resource temporarily unavailable
Stats 86437.0: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=2526 bytes_read=5990 bytes_retransmit=9 bytes_invalid=0 send_seq=210 receive_seq=210 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72002177  heater_bed: target=0 temp=0.0 pwm=0.000 sysload=0.56 cputime=5577.268 memavail=7476964 print_time=4.767 buffer_time=0.242 print_stall=0 extruder: target=0 temp=0.0 pwm=0.000
webhooks: registering remote method 'shutdown_machine' for connection id: 547802443200
webhooks: registering remote method 'reboot_machine' for connection id: 547802443200
webhooks: registering remote method 'pause_job_queue' for connection id: 547802443200
webhooks: registering remote method 'start_job_queue' for connection id: 547802443200
webhooks: registering remote method 'timelapse_newframe' for connection id: 547802443200
webhooks: registering remote method 'timelapse_saveFrames' for connection id: 547802443200
webhooks: registering remote method 'timelapse_render' for connection id: 547802443200
Stats 86438.0: gcodein=0  mcu: mcu_awake=0.007 mcu_task_avg=0.000019 mcu_task_stddev=0.000025 bytes_write=2599 bytes_read=6163 bytes_retransmit=9 bytes_invalid=0 send_seq=216 receive_seq=216 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000933  heater_bed: target=0 temp=18.9 pwm=0.000 sysload=0.56 cputime=5577.377 memavail=7476764 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.2 pwm=0.000
Stats 86439.0: gcodein=0  mcu: mcu_awake=0.007 mcu_task_avg=0.000019 mcu_task_stddev=0.000025 bytes_write=2605 bytes_read=6269 bytes_retransmit=9 bytes_invalid=0 send_seq=217 receive_seq=217 retransmit_seq=2 srtt=0.003 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72002909  heater_bed: target=0 temp=19.0 pwm=0.000 sysload=0.56 cputime=5577.412 memavail=7476516 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.3 pwm=0.000
Stats 86440.0: gcodein=0  mcu: mcu_awake=0.007 mcu_task_avg=0.000019 mcu_task_stddev=0.000025 bytes_write=2611 bytes_read=6375 bytes_retransmit=9 bytes_invalid=0 send_seq=218 receive_seq=218 retransmit_seq=2 srtt=0.003 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=47 freq=72002757  heater_bed: target=0 temp=18.9 pwm=0.000 sysload=0.51 cputime=5577.432 memavail=7476516 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.2 pwm=0.000
Stats 86441.0: gcodein=0  mcu: mcu_awake=0.007 mcu_task_avg=0.000019 mcu_task_stddev=0.000025 bytes_write=2689 bytes_read=6591 bytes_retransmit=9 bytes_invalid=0 send_seq=224 receive_seq=224 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003068  heater_bed: target=0 temp=18.9 pwm=0.000 sysload=0.51 cputime=5577.487 memavail=7475616 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.2 pwm=0.000
Stats 86442.0: gcodein=0  mcu: mcu_awake=0.007 mcu_task_avg=0.000019 mcu_task_stddev=0.000025 bytes_write=2751 bytes_read=6761 bytes_retransmit=9 bytes_invalid=0 send_seq=229 receive_seq=229 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72013989  heater_bed: target=0 temp=18.7 pwm=0.000 sysload=0.51 cputime=5577.536 memavail=7478380 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.2 pwm=0.000
Stats 86443.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=2813 bytes_read=6945 bytes_retransmit=9 bytes_invalid=0 send_seq=234 receive_seq=234 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72009642  heater_bed: target=0 temp=18.8 pwm=0.000 sysload=0.51 cputime=5577.588 memavail=7478484 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.3 pwm=0.000
Stats 86444.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=2875 bytes_read=7145 bytes_retransmit=9 bytes_invalid=0 send_seq=239 receive_seq=239 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72009139  heater_bed: target=0 temp=18.9 pwm=0.000 sysload=0.51 cputime=5577.646 memavail=7478484 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.2 pwm=0.000
Stats 86445.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=2937 bytes_read=7315 bytes_retransmit=9 bytes_invalid=0 send_seq=244 receive_seq=244 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72007123  heater_bed: target=0 temp=18.6 pwm=0.000 sysload=0.55 cputime=5577.691 memavail=7478484 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.1 pwm=0.000
Stats 86446.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=2999 bytes_read=7485 bytes_retransmit=9 bytes_invalid=0 send_seq=249 receive_seq=249 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72005930  heater_bed: target=0 temp=18.9 pwm=0.000 sysload=0.55 cputime=5577.743 memavail=7478484 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.1 pwm=0.000
Stats 86447.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=3061 bytes_read=7685 bytes_retransmit=9 bytes_invalid=0 send_seq=254 receive_seq=254 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72005083  heater_bed: target=0 temp=18.8 pwm=0.000 sysload=0.55 cputime=5577.783 memavail=7478488 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.0 pwm=0.000
Stats 86448.0: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=3123 bytes_read=7869 bytes_retransmit=9 bytes_invalid=0 send_seq=259 receive_seq=259 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004598  heater_bed: target=0 temp=18.7 pwm=0.000 sysload=0.55 cputime=5577.819 memavail=7478488 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.1 pwm=0.000
Stats 86449.0: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=3185 bytes_read=8039 bytes_retransmit=9 bytes_invalid=0 send_seq=264 receive_seq=264 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004870  heater_bed: target=0 temp=18.8 pwm=0.000 sysload=0.55 cputime=5577.898 memavail=7478488 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.2 pwm=0.000
Stats 86450.0: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=3247 bytes_read=8239 bytes_retransmit=9 bytes_invalid=0 send_seq=269 receive_seq=269 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004504  heater_bed: target=0 temp=18.7 pwm=0.000 sysload=0.51 cputime=5577.968 memavail=7478488 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.1 pwm=0.000
Stats 86451.0: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=3315 bytes_read=8409 bytes_retransmit=9 bytes_invalid=0 send_seq=275 receive_seq=274 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004268  heater_bed: target=0 temp=18.7 pwm=0.000 sysload=0.51 cputime=5578.023 memavail=7478488 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.1 pwm=0.000
Stats 86452.0: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=3377 bytes_read=8595 bytes_retransmit=9 bytes_invalid=0 send_seq=280 receive_seq=280 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004320  heater_bed: target=0 temp=18.6 pwm=0.000 sysload=0.51 cputime=5578.070 memavail=7478488 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.0 pwm=0.000
Stats 86453.0: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=3439 bytes_read=8809 bytes_retransmit=9 bytes_invalid=0 send_seq=285 receive_seq=285 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004521  heater_bed: target=0 temp=18.8 pwm=0.000 sysload=0.51 cputime=5578.129 memavail=7478488 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.1 pwm=0.000
Stats 86454.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=3501 bytes_read=8979 bytes_retransmit=9 bytes_invalid=0 send_seq=290 receive_seq=290 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004289  heater_bed: target=0 temp=18.8 pwm=0.000 sysload=0.51 cputime=5578.184 memavail=7478492 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.1 pwm=0.000
Stats 86455.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=3563 bytes_read=9149 bytes_retransmit=9 bytes_invalid=0 send_seq=295 receive_seq=295 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004576  heater_bed: target=0 temp=18.7 pwm=0.000 sysload=0.47 cputime=5578.235 memavail=7478492 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.2 pwm=0.000
Stats 86456.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=3625 bytes_read=9349 bytes_retransmit=9 bytes_invalid=0 send_seq=300 receive_seq=300 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004358  heater_bed: target=0 temp=18.7 pwm=0.000 sysload=0.47 cputime=5578.271 memavail=7478496 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.2 pwm=0.000
Stats 86457.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=3687 bytes_read=9519 bytes_retransmit=9 bytes_invalid=0 send_seq=305 receive_seq=305 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004201  heater_bed: target=0 temp=18.7 pwm=0.000 sysload=0.47 cputime=5578.322 memavail=7478496 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.2 pwm=0.000
Stats 86458.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=3749 bytes_read=9703 bytes_retransmit=9 bytes_invalid=0 send_seq=310 receive_seq=310 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004177  heater_bed: target=0 temp=18.6 pwm=0.000 sysload=0.47 cputime=5578.363 memavail=7478496 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.2 pwm=0.000
Stats 86459.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=3811 bytes_read=9903 bytes_retransmit=9 bytes_invalid=0 send_seq=315 receive_seq=315 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004037  heater_bed: target=0 temp=18.4 pwm=0.000 sysload=0.47 cputime=5578.392 memavail=7478504 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.1 pwm=0.000
Stats 86460.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=3873 bytes_read=10073 bytes_retransmit=9 bytes_invalid=0 send_seq=320 receive_seq=320 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004133  heater_bed: target=0 temp=18.6 pwm=0.000 sysload=0.51 cputime=5578.423 memavail=7478504 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.2 pwm=0.000
Stats 86461.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=3935 bytes_read=10243 bytes_retransmit=9 bytes_invalid=0 send_seq=325 receive_seq=325 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004019  heater_bed: target=0 temp=18.8 pwm=0.000 sysload=0.51 cputime=5578.469 memavail=7478252 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.2 pwm=0.000
Stats 86462.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=3997 bytes_read=10443 bytes_retransmit=9 bytes_invalid=0 send_seq=330 receive_seq=330 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004077  heater_bed: target=0 temp=18.9 pwm=0.000 sysload=0.51 cputime=5578.517 memavail=7478000 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.2 pwm=0.000
Stats 86463.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=4059 bytes_read=10627 bytes_retransmit=9 bytes_invalid=0 send_seq=335 receive_seq=335 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003991  heater_bed: target=0 temp=18.9 pwm=0.000 sysload=0.51 cputime=5578.554 memavail=7478000 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.1 pwm=0.000
Stats 86464.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=4121 bytes_read=10797 bytes_retransmit=9 bytes_invalid=0 send_seq=340 receive_seq=340 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004015  heater_bed: target=0 temp=18.9 pwm=0.000 sysload=0.51 cputime=5578.593 memavail=7478004 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.3 pwm=0.000
Stats 86465.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=4183 bytes_read=10997 bytes_retransmit=9 bytes_invalid=0 send_seq=345 receive_seq=345 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004160  heater_bed: target=0 temp=18.9 pwm=0.000 sysload=0.55 cputime=5578.662 memavail=7478004 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.3 pwm=0.000
Stats 86466.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=4245 bytes_read=11167 bytes_retransmit=9 bytes_invalid=0 send_seq=350 receive_seq=350 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004062  heater_bed: target=0 temp=18.9 pwm=0.000 sysload=0.55 cputime=5578.708 memavail=7478004 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.2 pwm=0.000
Stats 86467.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=4307 bytes_read=11337 bytes_retransmit=9 bytes_invalid=0 send_seq=355 receive_seq=355 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004262  heater_bed: target=0 temp=18.7 pwm=0.000 sysload=0.55 cputime=5578.755 memavail=7478004 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.3 pwm=0.000
Stats 86468.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=4369 bytes_read=11551 bytes_retransmit=9 bytes_invalid=0 send_seq=360 receive_seq=360 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004151  heater_bed: target=0 temp=18.7 pwm=0.000 sysload=0.55 cputime=5578.822 memavail=7478004 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.3 pwm=0.000
Stats 86469.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=4431 bytes_read=11721 bytes_retransmit=9 bytes_invalid=0 send_seq=365 receive_seq=365 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004313  heater_bed: target=0 temp=18.9 pwm=0.000 sysload=0.55 cputime=5578.870 memavail=7478004 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.2 pwm=0.000
Stats 86470.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=4493 bytes_read=11891 bytes_retransmit=9 bytes_invalid=0 send_seq=370 receive_seq=370 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004209  heater_bed: target=0 temp=18.8 pwm=0.000 sysload=0.51 cputime=5578.916 memavail=7478004 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.1 pwm=0.000
Stats 86471.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=4555 bytes_read=12091 bytes_retransmit=9 bytes_invalid=0 send_seq=375 receive_seq=375 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004288  heater_bed: target=0 temp=18.6 pwm=0.000 sysload=0.51 cputime=5578.974 memavail=7477396 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.1 pwm=0.000
Stats 86472.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=4617 bytes_read=12261 bytes_retransmit=9 bytes_invalid=0 send_seq=380 receive_seq=380 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004187  heater_bed: target=0 temp=18.9 pwm=0.000 sysload=0.51 cputime=5579.030 memavail=7477756 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.2 pwm=0.000
Stats 86473.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=4679 bytes_read=12445 bytes_retransmit=9 bytes_invalid=0 send_seq=385 receive_seq=385 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004099  heater_bed: target=0 temp=18.8 pwm=0.000 sysload=0.51 cputime=5579.099 memavail=7477504 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.2 pwm=0.000
Stats 86474.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=4741 bytes_read=12645 bytes_retransmit=9 bytes_invalid=0 send_seq=390 receive_seq=390 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72004021  heater_bed: target=0 temp=18.6 pwm=0.000 sysload=0.51 cputime=5579.142 memavail=7477504 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.2 pwm=0.000
Stats 86475.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=4803 bytes_read=12815 bytes_retransmit=9 bytes_invalid=0 send_seq=395 receive_seq=395 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003953  heater_bed: target=0 temp=18.8 pwm=0.000 sysload=0.46 cputime=5579.186 memavail=7477508 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.2 pwm=0.000
Stats 86476.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=4865 bytes_read=13000 bytes_retransmit=9 bytes_invalid=0 send_seq=400 receive_seq=400 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003985  heater_bed: target=0 temp=18.6 pwm=0.000 sysload=0.46 cputime=5579.223 memavail=7477508 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.0 pwm=0.000
Stats 86477.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=4927 bytes_read=13185 bytes_retransmit=9 bytes_invalid=0 send_seq=405 receive_seq=405 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003925  heater_bed: target=0 temp=18.8 pwm=0.000 sysload=0.46 cputime=5579.270 memavail=7477508 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.0 pwm=0.000
Stats 86478.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=4989 bytes_read=13355 bytes_retransmit=9 bytes_invalid=0 send_seq=410 receive_seq=410 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003956  heater_bed: target=0 temp=18.7 pwm=0.000 sysload=0.46 cputime=5579.320 memavail=7477508 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.2 pwm=0.000
Stats 86479.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=5051 bytes_read=13554 bytes_retransmit=9 bytes_invalid=0 send_seq=415 receive_seq=415 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003895  heater_bed: target=0 temp=18.8 pwm=0.000 sysload=0.46 cputime=5579.380 memavail=7477508 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.1 pwm=0.000
Stats 86480.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=5113 bytes_read=13739 bytes_retransmit=9 bytes_invalid=0 send_seq=420 receive_seq=420 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003856  heater_bed: target=0 temp=18.7 pwm=0.000 sysload=0.43 cputime=5579.416 memavail=7477508 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.2 pwm=0.000
Stats 86481.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=5175 bytes_read=13909 bytes_retransmit=9 bytes_invalid=0 send_seq=425 receive_seq=425 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003912  heater_bed: target=0 temp=18.9 pwm=0.000 sysload=0.43 cputime=5579.449 memavail=7476780 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.1 pwm=0.000
Stats 86482.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=5237 bytes_read=14094 bytes_retransmit=9 bytes_invalid=0 send_seq=430 receive_seq=430 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003856  heater_bed: target=0 temp=18.7 pwm=0.000 sysload=0.43 cputime=5579.493 memavail=7476784 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.1 pwm=0.000
Stats 86483.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=5299 bytes_read=14279 bytes_retransmit=9 bytes_invalid=0 send_seq=435 receive_seq=435 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003935  heater_bed: target=0 temp=18.7 pwm=0.000 sysload=0.43 cputime=5579.546 memavail=7476784 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.0 pwm=0.000
Stats 86484.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=5361 bytes_read=14463 bytes_retransmit=9 bytes_invalid=0 send_seq=440 receive_seq=440 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003883  heater_bed: target=0 temp=18.7 pwm=0.000 sysload=0.43 cputime=5579.595 memavail=7476532 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.1 pwm=0.000
Stats 86485.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=5423 bytes_read=14648 bytes_retransmit=9 bytes_invalid=0 send_seq=445 receive_seq=445 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003834  heater_bed: target=0 temp=18.8 pwm=0.000 sysload=0.39 cputime=5579.642 memavail=7476532 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.0 pwm=0.000
Stats 86486.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=5485 bytes_read=14833 bytes_retransmit=9 bytes_invalid=0 send_seq=450 receive_seq=450 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003788  heater_bed: target=0 temp=18.7 pwm=0.000 sysload=0.39 cputime=5579.708 memavail=7476532 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.1 pwm=0.000
Stats 86487.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=5547 bytes_read=15003 bytes_retransmit=9 bytes_invalid=0 send_seq=455 receive_seq=455 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003753  heater_bed: target=0 temp=18.8 pwm=0.000 sysload=0.39 cputime=5579.755 memavail=7476532 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.1 pwm=0.000
Stats 86488.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=5609 bytes_read=15188 bytes_retransmit=9 bytes_invalid=0 send_seq=460 receive_seq=460 retransmit_seq=2 srtt=0.005 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003804  heater_bed: target=0 temp=18.9 pwm=0.000 sysload=0.39 cputime=5579.802 memavail=7476532 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.3 pwm=0.000
Stats 86489.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=5671 bytes_read=15387 bytes_retransmit=9 bytes_invalid=0 send_seq=465 receive_seq=465 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003764  heater_bed: target=0 temp=18.9 pwm=0.000 sysload=0.39 cputime=5579.857 memavail=7476532 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.2 pwm=0.000
Stats 86490.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=5733 bytes_read=15557 bytes_retransmit=9 bytes_invalid=0 send_seq=470 receive_seq=470 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003856  heater_bed: target=0 temp=18.8 pwm=0.000 sysload=0.52 cputime=5579.917 memavail=7476536 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.2 pwm=0.000
Stats 86491.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=5795 bytes_read=15741 bytes_retransmit=9 bytes_invalid=0 send_seq=475 receive_seq=475 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003815  heater_bed: target=0 temp=18.9 pwm=0.000 sysload=0.52 cputime=5579.966 memavail=7480144 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.1 pwm=0.000
Stats 86492.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=5857 bytes_read=15918 bytes_retransmit=9 bytes_invalid=0 send_seq=480 receive_seq=480 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003952  heater_bed: target=0 temp=18.9 pwm=0.000 sysload=0.52 cputime=5580.012 memavail=7479920 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.1 pwm=0.000
Stats 86493.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=5919 bytes_read=16081 bytes_retransmit=9 bytes_invalid=0 send_seq=485 receive_seq=485 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003913  heater_bed: target=0 temp=18.7 pwm=0.000 sysload=0.52 cputime=5580.063 memavail=7479672 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.1 pwm=0.000
Stats 86494.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=5981 bytes_read=16272 bytes_retransmit=9 bytes_invalid=0 send_seq=490 receive_seq=490 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003875  heater_bed: target=0 temp=18.8 pwm=0.000 sysload=0.52 cputime=5580.112 memavail=7479672 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.1 pwm=0.000
Stats 86495.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=6043 bytes_read=16453 bytes_retransmit=9 bytes_invalid=0 send_seq=495 receive_seq=495 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003854  heater_bed: target=0 temp=18.8 pwm=0.000 sysload=0.56 cputime=5580.154 memavail=7479672 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=18.9 pwm=0.000
Stats 86496.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=6105 bytes_read=16623 bytes_retransmit=9 bytes_invalid=0 send_seq=500 receive_seq=500 retransmit_seq=2 srtt=0.004 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003818  heater_bed: target=0 temp=18.7 pwm=0.000 sysload=0.56 cputime=5580.196 memavail=7479672 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.1 pwm=0.000
Stats 86497.1: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000011 mcu_task_stddev=0.000006 bytes_write=6167 bytes_read=16808 bytes_retransmit=9 bytes_invalid=0 send_seq=505 receive_seq=505 retransmit_seq=2 srtt=0.004 rttvar=0.001 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72003780  heater_bed: target=0 temp=18.6 pwm=0.000 sysload=0.56 cputime=5580.250 memavail=7479672 print_time=4.767 buffer_time=0.000 print_stall=0 extruder: target=0 temp=19.2 pwm=0.000
